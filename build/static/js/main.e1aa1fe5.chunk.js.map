{"version":3,"sources":["components/Landing/landing.jpg","components/Home/register.jpg","components/Home/booking.jpg","components/Home/activities.jpg","components/Home/staff.jpg","components/Home/room.jpg","components/Home/guest.jpg","components/Home/reservation.jpg","theme/index.js","reducers/session.js","reducers/user.js","reducers/message.js","reducers/room.js","reducers/guest.js","reducers/booking.js","reducers/index.js","store/index.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Navigation/Navigation.js","components/Navigation/NavigationList.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","constants/roles.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Home/index.js","components/hooks/input-hook.js","components/Register/index.js","components/Booking/BookingForm.js","components/Rooms/RoomIcons.js","components/Booking/BookingListItem.js","components/Booking/BookingList.js","components/Booking/Bookings.js","components/Rooms/RoomForm.js","components/Rooms/RoomDeleteConfirmation.js","components/Rooms/RoomListItem.js","components/Loading/TableLoading.js","components/Rooms/RoomList.js","components/Rooms/Rooms.js","components/Rooms/index.js","components/Booking/CreateBookingEdit.js","components/Booking/CreateBookingNew.js","components/Booking/CreateBooking.js","components/Booking/index.js","components/Activities/index.js","components/Staff/StaffListItem.js","components/Staff/Staff.js","components/Staff/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/userList.js","components/Users/userItem.js","components/Admin/index.js","components/Guests/GuestSearch.js","components/Guests/GuestListItem.js","components/Guests/TableHeads.js","components/Guests/GuestList.js","components/Guests/TableToolbar.js","components/Guests/Guests.js","components/Guests/index.js","components/Reservation/ReservationListItem.js","components/Reservation/TableHeads.js","components/Reservation/TableToolbar.js","components/Reservation/ReservationList.js","components/Reservation/ReservationSearch.js","components/Reservation/Reservations.js","components/Reservation/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","background","paper","default","grid","overrides","MuiTableCell","root","hover","INITIAL_STATE","authUser","applySetAuthUser","state","action","sessionReducer","type","user","applySetUsers","users","applySetUser","uid","userReducer","messages","limit","applySetMessages","applySetMessagesLimit","messageReducer","rooms","applySetRooms","roomReducer","guests","applySetGuests","guestReducer","bookings","applySetBookings","bookingReducer","rootReducer","combineReducers","sessionState","userState","messageState","roomState","guestState","bookingState","store","createStore","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","changeEmail","newEmail","updateEmail","db","ref","saveData","data","collection","push","saveDataReturnKey","key","fetch","fetchId","message","onAuthUserListener","next","fallback","onAuthStateChanged","once","then","snapshot","dbUser","val","roles","app","this","serverValue","ServerValue","Button","color","variant","onClick","size","HOME","ROOM","NavigationAuth","Typography","className","to","ROUTES","SignOut","NavigationNonAuth","connect","useStyles","makeStyles","list","width","fullList","NavigationListAuth","setOpen","classes","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","Divider","NavigationListNonAuth","flexGrow","marginBottom","menuButton","marginRight","spacing","title","link","Navbar","useState","open","AppBar","position","Toolbar","Hidden","smDown","mdUp","IconButton","edge","aria-label","SwipeableDrawer","anchor","onClose","onOpen","Landing","src","landingImage","alt","container","marginTop","padding","TextField","SignUpLink","SignUpForm","compose","withRouter","username","setUsername","setEmail","passwordOne","setPasswordOne","passwordTwo","setPasswordTwo","setIsAdmin","error","setError","isInvalid","onSubmit","event","GUEST","set","history","catch","preventDefault","name","value","id","label","onChange","e","target","disabled","SignUp","Container","maxWidth","Paper","PasswordForgetFormBase","onsubmit","setState","placeholder","PasswordForgetLink","PasswordForget","PasswordForgetForm","SignInForm","setPassword","SignIn","withAuthentication","WithAuthentication","onSetAuthUser","JSON","parse","localStorage","getItem","listener","setItem","stringify","removeItem","dispatch","withAuthorization","condition","WithAuthorization","images","url","register","booking","reservation","activities","staff","room","guest","display","flexWrap","minWidth","justifyContent","image","height","margin","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","adminImages","filter","roleNeeded","Object","values","includes","style","backgroundImage","map","ButtonBase","focusRipple","focusVisibleClassName","component","useInput","initialValue","setValue","reset","bind","firstName","bindFirstName","resetFirstName","lastName","bindLastName","resetLastName","gender","setGender","dateOfBirth","bindDateOfBirth","resetDateOfBirth","contactNumber","bindContactNumber","resetContactNumber","bindEmail","resetEmail","address","bindAddress","resetAddress","postcode","bindPostcode","resetPostcode","gutterBottom","person","alert","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","multiline","rows","form","headTextField","textField","setFilteredRooms","setCheckInDate","setCheckOutDate","numberOfGuests","setNumberOfGuests","checkInDate","checkOutDate","result","Date","dateGreaterThan","filteredRooms","roomCapacity","toString","length","roomName","startDate","endDate","output","Math","round","abs","calculateNights","RoomIcons","amenities","accessibility","Tooltip","fontSize","breakfast","parking","wifi","cell","BookingListItem","createBooking","TableRow","TableCell","roomNumber","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Grid","Box","item","xs","beds","bed","index","table","BookingList","TableContainer","Table","TableHead","TableBody","useSelector","keys","status","roomId","flexDirection","formControl","select","bindRoomNumber","resetRoomNumber","bindRoomName","resetRoomName","pricePerNight","bindPricePerNight","resetPricePerNight","setBeds","setAmenities","handleCheckboxChange","checked","handleDeleteBed","i","newBedsArray","slice","capacity","console","log","calculateCapacity","InputProps","startAdornment","InputAdornment","FormGroup","Checkbox","InputLabel","Select","labelId","handleBed","newInput","concat","RoomDeleteConfirmation","openDeleteConfirmation","setOpenDeleteConfirmation","onRemoveRoom","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","card","RoomListItem","onEditRoom","editMode","setEditMode","setRoomCapacity","onToggleEditMode","useEffect","TableLoading","RoomList","loading","Rooms","setLoading","useDispatch","on","onSetRooms","off","remove","editedRoom","paddingRight","box","CreateBookingEdit","handleSubmit","addGuest","handleGuest","handleDeleteGuest","selectedGuests","setRoom","reservationMode","setStatus","Card","CardContent","selectedGuest","Autocomplete","options","getOptionLabel","selectorOptions","getOptionSelected","option","rend","renderInput","params","CardActions","fullWidth","MenuItem","CreateBookingNew","setSelectedGuests","useParams","find","bookedRoom","newGuest","newGuestsArray","initialGuests","editedBooking","Bookings","Activities","cursor","currentRole","setCurrentRole","editedUser","Staff","onSetUsers","bindPasswordOne","resetPasswordOne","bindPasswordTwo","resetPasswordTwo","PasswordChange","UserList","UserItem","onSendPasswordResetEmail","match","exact","path","GuestSearch","setFilteredGuests","setFirstName","setLastName","setDateOfBirth","setContactNumber","setAddress","setPostcode","query","filteredGuests","toLowerCase","divider","selected","setSelected","editedGuest","isSelected","indexOf","selectedIndex","newSelected","handleClick","aria-checked","tabIndex","fistName","inputProps","scope","headCells","disablePadding","TableHeads","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","indeterminate","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","clip","overflow","GuestList","page","rowsPerPage","setOrderBy","setOrder","descendingComparator","a","b","newSelecteds","n","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","useToolbarStyles","paddingLeft","highlight","lighten","text","flex","TableToolbar","deleteAllSelected","clsx","Guests","setPage","setRowsPerPage","Promise","resolve","setTimeout","random","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","loopDelete","buttonCell","editedReservation","handleClose","openConfirmation","closeConfirmation","checkIn","update","checkOut","guestNumber","newSelectedGuests","ReservationSearch","setFilteredBookings","bookingRef","setBookingRef","setRoomName","bookingStatus","setBookingStatus","filteredBookings","Reservations","Home","Register","CreateBooking","Room","Account","Admin","Boolean","window","location","hostname","ReactDOM","render","Provider","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1aa1fe5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.c41aa14d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/register.9a92489a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/booking.daca035f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/activities.e24bab54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/staff.84081a59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/room.0bfcfa99.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guest.15892850.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reservation.a2307f9d.jpg\";","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#424242\",\n      light: \"#6d6d6d\",\n      dark: \"#1b1b1b\",\n      contrastText: \"#ffa000\",\n    },\n    secondary: {\n      main: \"#ffeb3b\",\n      contrastText: \"#000000\",\n    },\n    background: {\n      paper: \"#fff\",\n      default: \"#e1e2e1\",\n      grid: \"#F5F5F6\",\n    },\n  },\n  overrides: {\n    MuiTableCell: {\n      root: {},\n      hover: {},\n    },\n  },\n});\n\nexport default theme;\n","const INITIAL_STATE = {\n  authUser: null,\n};\n\nconst applySetAuthUser = (state, action) => ({\n  ...state,\n  authUser: action.authUser,\n});\n\nfunction sessionReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"AUTH_USER_SET\": {\n      return applySetAuthUser(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default sessionReducer;","const INITIAL_STATE = {\n  user: null,\n};\n\nconst applySetUsers = (state, action) => ({\n  ...state,\n  users: action.users,\n});\n\nconst applySetUser = (state, action) => ({\n  ...state,\n  users: {\n    ...state.users,\n    [action.uid]: action.user,\n  },\n});\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"USERS_SET\": {\n      return applySetUsers(state, action);\n    }\n    case \"USER_SET\": {\n      return applySetUser(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;\n","const INITIAL_STATE = {\n  messages: null,\n  limit: 5,\n};\n\nconst applySetMessages = (state, action) => ({\n  ...state,\n  messages: action.messages,\n});\n\nconst applySetMessagesLimit = (state, action) => ({\n  ...state,\n  limit: action.limit,\n});\n\nfunction messageReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"MESSAGES_SET\": {\n      return applySetMessages(state, action);\n    }\n    case \"MESSAGES_LIMIT_SET\": {\n      return applySetMessagesLimit(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default messageReducer;\n","const INITIAL_STATE = {\n  rooms: null,\n};\n\nconst applySetRooms = (state, action) => ({\n  ...state,\n  rooms: action.rooms,\n});\n\nfunction roomReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"ROOMS_SET\": {\n      return applySetRooms(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default roomReducer;\n","const INITIAL_STATE = {\n  guests: null,\n};\n\nconst applySetGuests = (state, action) => ({\n  ...state,\n  guests: action.guests,\n});\n\nfunction guestReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"GUESTS_SET\": {\n      return applySetGuests(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default guestReducer;\n","const INITIAL_STATE = {\n  bookings: null,\n};\n\nconst applySetBookings = (state, action) => ({\n  ...state,\n  bookings: action.bookings,\n});\n\nfunction bookingReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"BOOKINGS_SET\": {\n      return applySetBookings(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default bookingReducer;\n","import { combineReducers } from \"redux\";\nimport sessionReducer from \"./session\";\nimport userReducer from \"./user\";\nimport messageReducer from \"./message\";\nimport roomReducer from \"./room\";\nimport guestReducer from \"./guest\";\nimport bookingReducer from \"./booking\";\n\nconst rootReducer = combineReducers({\n  sessionState: sessionReducer,\n  userState: userReducer,\n  messageState: messageReducer,\n  roomState: roomReducer,\n  guestState: guestReducer,\n  bookingState: bookingReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import * as app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.serverValue = app.database.ServerValue;\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = (password) =>\n    this.auth.currentUser.updatePassword(password);\n\n  changeEmail = (newEmail) => this.auth.currentUser.updateEmail(newEmail);\n\n  // User API\n  user = (uid) => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref(\"users\");\n\n  // DIY API\n  saveData = (data, collection) => this.db.ref(`/${collection}`).push(data);\n\n  saveDataReturnKey = (data, collection) => {\n    const key = this.db.ref(`/${collection}`).push(data).key;\n    return key;\n  };\n\n  fetch = (collection) => this.db.ref(`${collection}`);\n\n  fetchId = (collection, uid) => this.db.ref(`${collection}/${uid}`);\n\n  // Message API\n  message = (uid) => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref(\"messages\");\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once(\"value\")\n          .then((snapshot) => {\n            const dbUser = snapshot.val();\n\n            if (!dbUser.roles) {\n              dbUser.roles = {};\n            }\n\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from \"./context\";\nimport Firebase from \"./firebase\";\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nimport { Button } from \"@material-ui/core\";\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    color=\"secondary\"\n    variant=\"contained\"\n    type=\"button\"\n    onClick={firebase.doSignOut}\n    size=\"small\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","export const LANDING = \"/\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const HOME = \"/home\";\nexport const ACCOUNT = \"/account\";\nexport const ADMIN = \"/admin\";\nexport const ADMIN_DETAILS = \"/admin/:id\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\nexport const REGISTER = \"/register\";\nexport const BOOKINGS = \"/bookings\";\nexport const CREATE_BOOKING = \"/bookings/:id\";\nexport const ACTIVITIES = \"/activities\";\nexport const STAFF = \"/staff\";\nexport const ROOM = \"/rooms\";\nexport const GUESTS = \"/guests\";\nexport const RESERVATIONS = \"/reservations\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport SignOutButton from \"../SignOut\";\nimport \"./Navigation.css\";\nimport { Typography } from \"@material-ui/core\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst Navigation = ({ authUser }) =>\n  authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />;\n\nconst mapStateToProps = (state) => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst NavigationAuth = ({ authUser }) => (\n  <Typography className=\"navigation\">\n    {(!!authUser.roles[ROLES.ADMIN] || !!authUser.roles[ROLES.STAFF]) && (\n      <>\n        <Link to={ROUTES.REGISTER}>Register</Link>\n        <Link to={ROUTES.BOOKINGS}>Bookings</Link>\n        <Link to={ROUTES.RESERVATIONS}>Reservations</Link>\n        <Link to={ROUTES.GUESTS}>Guests</Link>\n      </>\n    )}\n\n    {!!authUser.roles[ROLES.ADMIN] && (\n      <>\n        <Link to={ROUTES.ROOM}>Rooms</Link>\n        <Link to={ROUTES.STAFF}>Staff</Link>\n      </>\n    )}\n\n    <Link to={ROUTES.ACCOUNT}>Account</Link>\n    <SignOutButton />\n  </Typography>\n);\n\nconst NavigationNonAuth = () => (\n  <Typography className=\"navigation\">\n    <Link to={ROUTES.LANDING}>Landing</Link>\n    <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n  </Typography>\n);\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport RoomServiceIcon from \"@material-ui/icons/RoomService\";\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport EmojiPeopleIcon from \"@material-ui/icons/EmojiPeople\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport SignOutButton from \"../SignOut\";\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nconst NavigationList = ({ authUser, setOpen }) =>\n  authUser ? (\n    <NavigationListAuth authUser={authUser} setOpen={setOpen} />\n  ) : (\n    <NavigationListNonAuth setOpen={setOpen} />\n  );\n\nconst NavigationListAuth = ({ authUser, setOpen }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={() => setOpen(false)}\n      onKeyDown={() => setOpen(false)}\n    >\n      {(!!authUser.roles[ROLES.ADMIN] || !!authUser.roles[ROLES.STAFF]) && (\n        <List>\n          <ListItem button>\n            <ListItemIcon>\n              <ContactMailIcon />\n            </ListItemIcon>\n            <ListItemText>\n              <Link to={ROUTES.REGISTER}>Register</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem button>\n            <ListItemIcon>\n              <ImportContactsIcon />\n            </ListItemIcon>\n            <ListItemText>\n              <Link to={ROUTES.BOOKINGS}>Bookings</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem button>\n            <ListItemIcon>\n              <RoomServiceIcon />\n            </ListItemIcon>\n            <ListItemText>\n              <Link to={ROUTES.RESERVATIONS}>Reservations</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem button>\n            <ListItemIcon>\n              <EmojiPeopleIcon />\n            </ListItemIcon>\n            <ListItemText>\n              <Link to={ROUTES.GUESTS}>Guests</Link>\n            </ListItemText>\n          </ListItem>\n        </List>\n      )}\n      <Divider />\n      {!!authUser.roles[ROLES.ADMIN] && (\n        <List>\n          <ListItem button>\n            <ListItemIcon>\n              <MeetingRoomIcon />\n            </ListItemIcon>\n            <ListItemText>\n              <Link to={ROUTES.ROOM}>Rooms</Link>\n            </ListItemText>\n          </ListItem>\n          <ListItem button>\n            <ListItemIcon>\n              <PeopleOutlineIcon />\n            </ListItemIcon>\n            <ListItemText>\n              <Link to={ROUTES.STAFF}>Staff</Link>\n            </ListItemText>\n          </ListItem>\n        </List>\n      )}\n      <Divider />\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <SupervisorAccountIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Link to={ROUTES.ACCOUNT}>Account</Link>\n          </ListItemText>\n        </ListItem>\n        <ListItem button>\n          <SignOutButton />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nconst NavigationListNonAuth = ({ setOpen }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={() => setOpen(false)}\n      onKeyDown={() => setOpen(false)}\n    >\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Link to={ROUTES.LANDING}>Landing</Link>\n          </ListItemText>\n        </ListItem>\n        <ListItem button>\n          <ListItemIcon>\n            <VpnKeyIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n          </ListItemText>\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  authUser: state.sessionState.authUser,\n});\n\nexport default connect(mapStateToProps)(NavigationList);\n","import React from \"react\";\nimport Navigation from \"./Navigation\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./Navigation.css\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Hidden,\n  SwipeableDrawer,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport NavigationList from \"./NavigationList\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: \"15px\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link: {\n    \"text-decoration\": \"none\",\n    color: theme.palette.primary.contrastText,\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.title}>\n          <Link to={ROUTES.HOME} className={classes.link}>\n            Hotel Technika\n          </Link>\n        </Typography>\n        <Hidden smDown>\n          <Navigation />\n        </Hidden>\n        <Hidden mdUp>\n          <IconButton\n            edge=\"end\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => setOpen(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n        <SwipeableDrawer\n          anchor={\"right\"}\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n        >\n          <NavigationList setOpen={setOpen} />\n        </SwipeableDrawer>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nimport landingImage from \"./landing.jpg\";\nimport \"./landing.css\";\n\nconst Landing = () => (\n  <img\n    className=\"landing\"\n    src={landingImage}\n    alt=\"Landing page of a Hotel room\"\n  />\n);\n\nexport default Landing;\n","import React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\nimport { withFirebase } from \"../Firebase\";\n\nimport { Button, TextField, Container, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  TextField: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst SignUp = () => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Paper className={classes.container}>\n        <h1>Sign Up</h1>\n        <SignUpForm />\n      </Paper>\n    </Container>\n  );\n};\n\nfunction SignUpFormBase(props) {\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwordOne, setPasswordOne] = useState(\"\");\n  const [passwordTwo, setPasswordTwo] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onSubmit = (event) => {\n    const roles = { GUEST: ROLES.GUEST };\n\n    props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        return props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n        });\n      })\n      .then(() => {\n        setUsername(\"\");\n        setEmail(\"\");\n        setPasswordOne(\"\");\n        setPasswordTwo(\"\");\n        setIsAdmin(false);\n        props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n    event.preventDefault();\n  };\n\n  const isInvalid =\n    passwordOne !== passwordTwo ||\n    passwordOne === \"\" ||\n    email === \"\" ||\n    username === \"\";\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className={classes.TextField}>\n        <TextField\n          name=\"username\"\n          value={username}\n          id=\"standard-basic\"\n          label=\"Username\"\n          onChange={(e) => setUsername(e.target.value)}\n          type=\"text\"\n        />\n      </div>\n      <div className={classes.TextField}>\n        <TextField\n          name=\"email\"\n          value={email}\n          id=\"standard-basic\"\n          label=\"Email\"\n          onChange={(e) => setEmail(e.target.value)}\n          type=\"text\"\n        />\n      </div>\n      <div className={classes.TextField}>\n        <TextField\n          name=\"passwordOne\"\n          value={passwordOne}\n          id=\"standard-basic\"\n          label=\"Password\"\n          onChange={(e) => setPasswordOne(e.target.value)}\n          type=\"password\"\n        />\n      </div>\n      <div className={classes.TextField}>\n        <TextField\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          id=\"standard-basic\"\n          label=\"Confirm Password\"\n          onChange={(e) => setPasswordTwo(e.target.value)}\n          type=\"password\"\n        />\n      </div>\n      <Button\n        disabled={isInvalid}\n        type=\"submit\"\n        color=\"secondary\"\n        variant=\"contained\"\n      >\n        Sign Up\n      </Button>\n      {error && <p>{error.message}</p>}\n    </form>\n  );\n}\n\nconst SignUpLink = () => {\n  return (\n    <p>\n      Don't have an account <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n  );\n};\n\nconst SignUpForm = compose(withRouter(withFirebase(SignUpFormBase)));\n\nexport default SignUp;\nexport { SignUpForm, SignUpLink };\n","export const ADMIN = \"ADMIN\";\nexport const STAFF = \"STAFF\";\nexport const GUEST = \"GUEST\";\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForget = () => (\n    <div>\n        <h1>PasswordForget</h1>\n        <PasswordForgetForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onsubmit = (event) => {\n        const { email } = this.state;\n\n        this.props.firebase\n        .doPasswordReset(email)\n        .then(() => {\n            this.setState({ ...INITIAL_STATE });\n        })\n        .catch(error => {\n            this.setState({ error });\n        });\n       event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                />\n                <button disabled={isInvalid} type=\"submit\">\n                    Reset My Password\n                </button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n \nconst PasswordForgetLink = () => (\n    <p>\n        <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n    </p>\n);\n \nexport default PasswordForget;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgetLink } from \"../PasswordForget\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { withFirebase } from \"../Firebase\";\n\nimport { Button, TextField, Container, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  TextField: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst SignIn = () => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Paper className={classes.container}>\n        <h1>SignIn</h1>\n        <SignInForm />\n        <PasswordForgetLink />\n        <SignUpLink />\n      </Paper>\n    </Container>\n  );\n};\n\nfunction SignInFormBase(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onSubmit = (event) => {\n    props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        setEmail(\"\");\n        setPassword(\"\");\n        props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n    event.preventDefault();\n  };\n\n  const classes = useStyles();\n  const isInvalid = password === \"\" || email === \"\";\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className={classes.TextField}>\n        <TextField\n          name=\"email\"\n          id=\"standard-basic\"\n          label=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          type=\"text\"\n        />\n      </div>\n      <div className={classes.TextField}>\n        <TextField\n          name=\"password\"\n          id=\"standard-basic\"\n          label=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n      </div>\n      <Button\n        disabled={isInvalid}\n        type=\"submit\"\n        color=\"secondary\"\n        variant=\"contained\"\n      >\n        Sign In\n      </Button>\n\n      {error && <p>{error.message}</p>}\n    </form>\n  );\n}\n\nconst SignInForm = compose(withRouter(withFirebase(SignInFormBase)));\n\nexport default SignIn;\nexport { SignInForm };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.props.onSetAuthUser(JSON.parse(localStorage.getItem(\"authUser\")));\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        (authUser) => {\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser));\n          this.props.onSetAuthUser(authUser);\n        },\n        () => {\n          localStorage.removeItem(\"authUser\");\n          this.props.onSetAuthUser(null);\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return <Component {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = (dispatch) => ({\n    onSetAuthUser: (authUser) => dispatch({ type: \"AUTH_USER_SET\", authUser }),\n  });\n  return compose(\n    withFirebase,\n    connect(null, mapDispatchToProps)\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withAuthorization = (condition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        (authUser) => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN)\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return condition(this.props.authUser) ? (\n        <Component {...this.props} />\n      ) : null;\n    }\n  }\n\n  const mapStateToProps = (state) => ({\n    authUser: state.sessionState.authUser,\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(mapStateToProps)\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from \"react\";\nimport { compose } from \"recompose\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport register from \"./register.jpg\";\nimport booking from \"./booking.jpg\";\nimport activities from \"./activities.jpg\";\nimport staff from \"./staff.jpg\";\nimport room from \"./room.jpg\";\nimport guest from \"./guest.jpg\";\nimport reservation from \"./reservation.jpg\";\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst images = [\n  {\n    url: register,\n    title: \"Register\",\n    width: \"31%\",\n    link: ROUTES.REGISTER,\n    auth: [ROLES.STAFF, ROLES.ADMIN],\n  },\n  {\n    url: booking,\n    title: \"Bookings\",\n    width: \"31%\",\n    link: ROUTES.BOOKINGS,\n    auth: [ROLES.STAFF, ROLES.ADMIN],\n  },\n  {\n    url: reservation,\n    title: \"Reservations\",\n    width: \"31%\",\n    link: ROUTES.RESERVATIONS,\n    auth: [ROLES.STAFF, ROLES.ADMIN],\n  },\n  {\n    url: activities,\n    title: \"Activities\",\n    width: \"31%\",\n    link: ROUTES.ACTIVITIES,\n    auth: [ROLES.GUEST, ROLES.STAFF, ROLES.ADMIN],\n  },\n  {\n    url: staff,\n    title: \"Staff\",\n    width: \"31%\",\n    link: ROUTES.STAFF,\n    auth: ROLES.ADMIN,\n  },\n  {\n    url: room,\n    title: \"Rooms\",\n    width: \"31%\",\n    link: ROUTES.ROOM,\n    auth: ROLES.ADMIN,\n  },\n  {\n    url: guest,\n    title: \"Guests\",\n    width: \"31%\",\n    link: ROUTES.GUESTS,\n    auth: [ROLES.STAFF, ROLES.ADMIN],\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    minWidth: 300,\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n  image: {\n    position: \"relative\",\n    height: 200,\n    margin: 5,\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100% !important\", // Overrides inline-style\n      height: 100,\n    },\n    \"&:hover, &$focusVisible\": {\n      zIndex: 1,\n      \"& $imageBackdrop\": {\n        opacity: 0.15,\n      },\n      \"& $imageTitle\": {\n        border: \"4px solid currentColor\",\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center 40%\",\n  },\n  imageBackdrop: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create(\"opacity\"),\n  },\n  imageTitle: {\n    position: \"relative\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\n      theme.spacing(1) + 6\n    }px`,\n  },\n}));\n\nconst Home = ({ authUser }) => {\n  const classes = useStyles();\n  const adminImages = images.filter((image) => {\n    const roleNeeded = Object.values(authUser.roles);\n    return image.auth.includes(roleNeeded[0]);\n  });\n\n  return (\n    <div className={classes.root}>\n      <span\n        style={{\n          backgroundImage: \"./register.jpg\",\n        }}\n      />\n      {adminImages.map((image) => (\n        <ButtonBase\n          focusRipple\n          key={image.title}\n          className={classes.image}\n          focusVisibleClassName={classes.focusVisible}\n          style={{\n            width: image.width,\n          }}\n        >\n          <Link to={image.link}>\n            <span\n              className={classes.imageSrc}\n              style={{\n                backgroundImage: `url(${image.url})`,\n              }}\n            />\n            <span className={classes.imageBackdrop} />\n            <span className={classes.imageButton}>\n              <Typography\n                component=\"span\"\n                variant=\"subtitle1\"\n                color=\"inherit\"\n                className={classes.imageTitle}\n              >\n                {image.title}\n              </Typography>\n            </span>\n          </Link>\n        </ButtonBase>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition),\n  connect(mapStateToProps)\n)(Home);\n","import { useState } from \"react\";\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};","import React, { useState } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { useInput } from \"../hooks/input-hook\";\nimport { compose } from \"recompose\";\nimport { withAuthorization } from \"../Session\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Paper,\n  Radio,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  TextField,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(2),\n      width: 300,\n    },\n    \" & .MuiFormControl-root\": {\n      margin: theme.spacing(2),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction Register(props) {\n  const classes = useStyles();\n  const [error, setError] = useState(\"\");\n  const {\n    value: firstName,\n    bind: bindFirstName,\n    reset: resetFirstName,\n  } = useInput(\"\");\n\n  const {\n    value: lastName,\n    bind: bindLastName,\n    reset: resetLastName,\n  } = useInput(\"\");\n\n  const [gender, setGender] = useState(\"\");\n\n  const {\n    value: dateOfBirth,\n    bind: bindDateOfBirth,\n    reset: resetDateOfBirth,\n  } = useInput(\"\");\n\n  const {\n    value: contactNumber,\n    bind: bindContactNumber,\n    reset: resetContactNumber,\n  } = useInput(\"\");\n\n  const { value: email, bind: bindEmail, reset: resetEmail } = useInput(\"\");\n\n  const { value: address, bind: bindAddress, reset: resetAddress } = useInput(\n    \"\"\n  );\n\n  const {\n    value: postcode,\n    bind: bindPostcode,\n    reset: resetPostcode,\n  } = useInput(\"\");\n\n  const handleRadioChange = (event) => {\n    setGender(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const person = {\n      firstName,\n      lastName,\n      gender,\n      dateOfBirth,\n      contactNumber,\n      email,\n      address,\n      postcode,\n    };\n\n    props.firebase\n      .saveData(person, \"guests\")\n      .then(() => {\n        alert(`Submitting Name \n    ${firstName} \n    ${lastName} \n    ${gender} \n    ${dateOfBirth} \n    ${contactNumber} \n    ${email} \n    ${address} \n    ${postcode} \n    `);\n        resetFirstName();\n        resetLastName();\n        setGender(\"\");\n        resetDateOfBirth();\n        resetContactNumber();\n        resetEmail();\n        resetAddress();\n        resetPostcode();\n        props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" gutterBottom className={classes.title}>\n          Registration\n        </Typography>\n        <Typography>\n          Please ensure all guest registration information is accurate and\n          complete\n        </Typography>\n\n        <form onSubmit={handleSubmit} className={classes.root}>\n          <div>\n            <TextField\n              name=\"firstName\"\n              id=\"standard-basic\"\n              label=\"First Name\"\n              type=\"text\"\n              {...bindFirstName}\n            />\n\n            <TextField\n              name=\"lastName\"\n              id=\"standard-basic\"\n              label=\"Last Name\"\n              type=\"text\"\n              {...bindLastName}\n            />\n          </div>\n          <TextField\n            name=\"dateOfBirth\"\n            id=\"date\"\n            label=\"Date Of Birth\"\n            type=\"date\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            {...bindDateOfBirth}\n          />\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Gender</FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"gender\"\n              name=\"gender\"\n              value={gender}\n              onChange={handleRadioChange}\n            >\n              <FormControlLabel\n                value=\"Female\"\n                control={<Radio />}\n                label=\"Female\"\n              />\n              <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel\n                value=\"Other\"\n                control={<Radio />}\n                label=\"Other\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <div>\n            <TextField\n              name=\"contactNumber\"\n              id=\"standard-basic\"\n              label=\"Contact Number\"\n              type=\"tel\"\n              {...bindContactNumber}\n            />\n            <TextField\n              name=\"email\"\n              id=\"standard-basic\"\n              label=\"Email\"\n              type=\"email\"\n              {...bindEmail}\n            />\n          </div>\n          <div>\n            <TextField\n              name=\"address\"\n              id=\"standard-basic\"\n              label=\"Address\"\n              multiline\n              rows={4}\n              type=\"text\"\n              {...bindAddress}\n            />\n            <TextField\n              name=\"postCode\"\n              id=\"standard-basic\"\n              label=\"Postcode\"\n              type=\"text\"\n              {...bindPostcode}\n            />\n          </div>\n          <Button color=\"secondary\" variant=\"contained\" type=\"submit\">\n            Submit\n          </Button>\n\n          {error && <p>{error.message}</p>}\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n\nconst condition = (authUser) =>\n  (authUser && !!authUser.roles[ROLES.ADMIN]) || !!authUser.roles[ROLES.STAFF];\n\nexport default compose(withFirebase, withAuthorization(condition))(Register);\n","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nimport { Paper, TextField, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"align-items\": \"baseline\",\n  },\n  headTextField: {\n    marginRight: theme.spacing(1),\n    width: \"90wv\",\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    width: \"15wv\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n  // title: {\n  //   padding: theme.spacing(2),\n  // },\n}));\n\nfunction BookingForm({\n  setFilteredRooms,\n  rooms,\n  setCheckInDate,\n  setCheckOutDate,\n  numberOfGuests,\n  setNumberOfGuests,\n  checkInDate,\n  checkOutDate,\n}) {\n  const classes = useStyles();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let filteredRooms = rooms;\n    if (numberOfGuests !== \"\") {\n      filteredRooms = rooms.filter(\n        (room) => room.roomCapacity.toString() === numberOfGuests\n      );\n    }\n    if (filteredRooms.length === 0) {\n      const emptyResults = [\n        {\n          roomName: \"Sorry! We have no rooms available\",\n        },\n      ];\n      setFilteredRooms(emptyResults);\n    } else {\n      setFilteredRooms(filteredRooms);\n    }\n  };\n\n  function dateGreaterThan() {\n    let startDate = new Date(checkInDate);\n    let endDate = new Date(checkOutDate);\n    let result = false;\n\n    if (startDate < endDate) {\n      result = true;\n    }\n    return result;\n  }\n\n  function calculateNights() {\n    let startDate = new Date(checkInDate);\n    let endDate = new Date(checkOutDate);\n    let output = 0;\n\n    if (!!checkInDate && !!checkOutDate && startDate < endDate) {\n      output = Math.round(Math.abs(+startDate - +endDate) / 8.64e7);\n    }\n    return output;\n  }\n\n  const isInvalid = !dateGreaterThan() || numberOfGuests === \"\";\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Find a Room\n      </Typography>\n      <Typography>\n        Please enter your desired check in and check out dates including the\n        number of your party\n      </Typography>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        <TextField\n          name=\"checkInDate\"\n          id=\"date\"\n          label=\"Check In Date\"\n          className={classes.textField}\n          variant=\"filled\"\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => setCheckInDate(e.target.value)}\n        />\n        <TextField\n          name=\"checkOutDate\"\n          id=\"date\"\n          label=\"Check Out Date\"\n          type=\"date\"\n          className={classes.textField}\n          variant=\"filled\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => setCheckOutDate(e.target.value)}\n        />\n        <TextField\n          name=\"numberOfPeople\"\n          id=\"filled-margin-none\"\n          label=\"Number Of People\"\n          type=\"number\"\n          variant=\"filled\"\n          className={classes.textField}\n          onChange={(e) => setNumberOfGuests(e.target.value)}\n        />\n        <Typography className={classes.textField}>\n          {calculateNights()} Nights\n        </Typography>\n        <Button\n          disabled={isInvalid}\n          className={classes.button}\n          color=\"secondary\"\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </Paper>\n  );\n}\n\nexport default withFirebase(BookingForm);\n","import React from \"react\";\n\nimport AccessibleIcon from \"@material-ui/icons/Accessible\";\nimport FreeBreakfastIcon from \"@material-ui/icons/FreeBreakfast\";\nimport LocalParkingIcon from \"@material-ui/icons/LocalParking\";\nimport WifiIcon from \"@material-ui/icons/Wifi\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nfunction RoomIcons({ amenities }) {\n  return (\n    <>\n      {amenities.accessibility && (\n        <Tooltip title=\"Wheelchair accessible\">\n          <AccessibleIcon fontSize=\"large\" />\n        </Tooltip>\n      )}\n      {amenities.breakfast && (\n        <Tooltip title=\"Free Breakfast included\">\n          <FreeBreakfastIcon fontSize=\"large\" />\n        </Tooltip>\n      )}\n      {amenities.parking && (\n        <Tooltip title=\"Includes Parking\">\n          <LocalParkingIcon fontSize=\"large\" />\n        </Tooltip>\n      )}\n      {amenities.wifi && (\n        <Tooltip title=\"Free Wi-fi\">\n          <WifiIcon fontSize=\"large\" />\n        </Tooltip>\n      )}\n    </>\n  );\n}\n\nexport default RoomIcons;\n","import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RoomIcons from \"../Rooms/RoomIcons\";\nimport KingBedIcon from \"@material-ui/icons/KingBed\";\nimport SingleBedIcon from \"@material-ui/icons/SingleBed\";\n\nconst useStyles = makeStyles((theme) => ({\n  cell: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n}));\n\nfunction BookingListItem(props) {\n  const [open, setOpen] = useState(false);\n  const { room, createBooking } = props;\n  const classes = useStyles();\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          {room.roomNumber && (\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          )}\n        </TableCell>\n        <TableCell>{room.roomName} </TableCell>\n        <TableCell>{room.roomNumber} </TableCell>\n        <TableCell>{room.roomCapacity} </TableCell>\n        <TableCell className={classes.cell}>\n          {room.roomNumber && (\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"button\"\n              onClick={() => createBooking(room)}\n              size=\"small\"\n            >\n              Select\n            </Button>\n          )}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Grid container component={Box} className={classes.grid}>\n              <Grid item xs={6}>\n                <Typography gutterBottom component=\"div\">\n                  Amenities\n                </Typography>\n\n                <RoomIcons amenities={room.amenities} />\n              </Grid>\n              <Grid item xs={6}>\n                <Typography gutterBottom component=\"div\">\n                  Beds\n                </Typography>\n                <List>\n                  {room.beds.map((bed, index) => (\n                    <ListItem key={index}>\n                      <ListItemIcon>\n                        {bed === \"Single\" ? <SingleBedIcon /> : <KingBedIcon />}\n                      </ListItemIcon>\n                      <ListItemText primary={bed} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Grid>\n            </Grid>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\nexport default BookingListItem;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport BookingListItem from \"./BookingListItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  container: {\n    marginTop: theme.spacing(2),\n  },\n  title: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction BookingList({ filteredRooms, createBooking }) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper} className={classes.container}>\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Available Rooms\n      </Typography>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Room Name</TableCell>\n            <TableCell>Room Number</TableCell>\n            <TableCell>Room Capacity</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredRooms &&\n            filteredRooms.map((room) => (\n              <BookingListItem\n                key={room.uid}\n                room={room}\n                createBooking={createBooking}\n              />\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default BookingList;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { Container } from \"@material-ui/core\";\n\nimport { withFirebase } from \"../Firebase\";\nimport { withAuthorization } from \"../Session\";\n\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\nimport BookingForm from \"./BookingForm\";\nimport BookingList from \"./BookingList\";\n\nfunction Bookings(props) {\n  const { rooms } = useSelector((state) => ({\n    rooms: Object.keys(state.roomState.rooms || {}).map((key) => ({\n      ...state.roomState.rooms[key],\n      uid: key,\n    })),\n  }));\n  const [filteredRooms, setFilteredRooms] = useState(\"\");\n  const [checkInDate, setCheckInDate] = useState(\"\");\n  const [checkOutDate, setCheckOutDate] = useState(\"\");\n  const [status] = useState(\"Started\");\n  const [numberOfGuests, setNumberOfGuests] = useState(\"\");\n\n  function createBooking(room) {\n    const roomId = room.uid;\n    const booking = {\n      checkInDate,\n      checkOutDate,\n      roomId,\n      status,\n      numberOfGuests,\n    };\n    props.firebase.saveData(booking, \"bookings\").then((booking) => {\n      props.history.push(`${ROUTES.BOOKINGS}/${booking.key}`);\n    });\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <BookingForm\n        setFilteredRooms={setFilteredRooms}\n        setCheckInDate={setCheckInDate}\n        setCheckOutDate={setCheckOutDate}\n        rooms={rooms}\n        numberOfGuests={numberOfGuests}\n        setNumberOfGuests={setNumberOfGuests}\n        checkInDate={checkInDate}\n        checkOutDate={checkOutDate}\n      />\n      {filteredRooms && (\n        <BookingList\n          filteredRooms={filteredRooms}\n          createBooking={createBooking}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst condition = (authUser) =>\n  (authUser && !!authUser.roles[ROLES.ADMIN]) ||\n  (authUser && !!authUser.roles[ROLES.STAFF]);\n\nexport default compose(withFirebase, withAuthorization(condition))(Bookings);\n","import React, { useState } from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nimport {\n  Paper,\n  TextField,\n  Button,\n  Select,\n  InputLabel,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  Typography,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport { useInput } from \"../hooks/input-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n  },\n  headTextField: {\n    marginRight: theme.spacing(1),\n    width: \"64vw\",\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    width: \"20vw\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  button: {\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    // flexWrap: \"wrap\",\n    flexDirection: \"row\",\n  },\n  select: {\n    marginBottom: theme.spacing(0.5),\n    width: \"20vw\",\n  },\n}));\n\nfunction RoomForm(props) {\n  // const [beds, setBeds] = useState([]);\n  const [error, setError] = useState(\"\");\n  const classes = useStyles();\n\n  const {\n    value: roomNumber,\n    bind: bindRoomNumber,\n    reset: resetRoomNumber,\n  } = useInput(\"\");\n\n  const {\n    value: roomName,\n    bind: bindRoomName,\n    reset: resetRoomName,\n  } = useInput(\"\");\n\n  const {\n    value: pricePerNight,\n    bind: bindPricePerNight,\n    reset: resetPricePerNight,\n  } = useInput(\"\");\n\n  const [beds, setBeds] = useState([\"Bed 1\"]);\n\n  const [amenities, setAmenities] = useState({\n    accessibility: false,\n    breakfast: false,\n    parking: false,\n    wifi: false,\n  });\n\n  const calculateCapacity = () => {\n    let capacity = 0;\n    console.log(\"initial\", capacity);\n    for (let i = 0; i < beds.length; i++) {\n      if (beds[i] === \"Single\") {\n        capacity += 1;\n      }\n      console.log(\"first\", capacity);\n      if (beds[i] === \"Double\" || beds[i] === \"Queen\" || beds[i] === \"King\") {\n        capacity += 2;\n      }\n      console.log(\"second\", capacity);\n    }\n    console.log(\"final\", capacity);\n    return capacity;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const roomCapacity = calculateCapacity();\n    const room = {\n      roomName,\n      roomNumber,\n      roomCapacity,\n      amenities,\n      pricePerNight,\n      beds,\n    };\n\n    props.firebase\n      .saveData(room, \"rooms\")\n      .then(() => {\n        alert(`Submitting Room ${roomName}, \n    Room number: ${roomNumber},\n    Number of People: ${roomCapacity} \n    `);\n        resetRoomName();\n        resetRoomNumber();\n        resetPricePerNight();\n        setBeds([]);\n        setAmenities({\n          accessibility: false,\n          breakfast: false,\n          parking: false,\n          wifi: false,\n        });\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  };\n\n  const handleCheckboxChange = (event) => {\n    setAmenities({ ...amenities, [event.target.name]: event.target.checked });\n  };\n\n  function handleBed(e, i) {\n    let newBedsArray = [...beds];\n    newBedsArray[i] = e.target.value;\n    setBeds(newBedsArray);\n  }\n\n  const handleDeleteBed = (i) => (e) => {\n    e.preventDefault();\n    let newBedsArray = [...beds.slice(0, i), ...beds.slice(i + 1)];\n    setBeds(newBedsArray);\n  };\n\n  const addBed = (e) => {\n    e.preventDefault();\n    let newInput = `Bed ${beds.length + 1}`;\n    let newBedsArray = beds.concat([newInput]);\n    setBeds(newBedsArray);\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h6\" gutterBottom className={classes.title}>\n        Add a Room\n      </Typography>\n\n      <form className={classes.root} onSubmit={handleSubmit}>\n        <TextField\n          id=\"filled-margin-none\"\n          label=\"Room Name\"\n          className={classes.headTextField}\n          margin=\"normal\"\n          variant=\"filled\"\n          {...bindRoomName}\n        />\n        <div>\n          <TextField\n            name=\"roomNumber\"\n            id=\"filled-margin-none\"\n            label=\"Room Number\"\n            type=\"number\"\n            className={classes.textField}\n            variant=\"filled\"\n            {...bindRoomNumber}\n          />\n\n          <TextField\n            name=\"pricePerNight\"\n            id=\"filled-margin-none\"\n            label=\"Price Per Night\"\n            type=\"number\"\n            variant=\"filled\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">£</InputAdornment>\n              ),\n            }}\n            className={classes.textField}\n            {...bindPricePerNight}\n          />\n        </div>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={amenities.accessibility}\n                onChange={handleCheckboxChange}\n                name=\"accessibility\"\n              />\n            }\n            label=\"Accessibility\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={amenities.breakfast}\n                onChange={handleCheckboxChange}\n                name=\"breakfast\"\n              />\n            }\n            label=\"Breakfast\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={amenities.parking}\n                onChange={handleCheckboxChange}\n                name=\"parking\"\n              />\n            }\n            label=\"Parking\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={amenities.wifi}\n                onChange={handleCheckboxChange}\n                name=\"wifi\"\n              />\n            }\n            label=\"Wifi\"\n          />\n        </FormGroup>\n        <div>\n          {beds.map((bed, i) => (\n            <FormControl\n              key={i}\n              variant=\"filled\"\n              className={classes.formControl}\n              size=\"small\"\n            >\n              <InputLabel id=\"simple-select-label\">Beds</InputLabel>\n              <Select\n                labelId=\"simple-select-label\"\n                id=\"demo-simple-select\"\n                value={bed}\n                className={classes.select}\n                onChange={(e) => handleBed(e, i)}\n              >\n                <option value={\"Single\"}>Single</option>\n                <option value={\"Double\"}>Double</option>\n                <option value={\"Queen\"}>Queen</option>\n                <option value={\"King\"}>King</option>\n              </Select>\n              <IconButton\n                color=\"primary\"\n                aria-label=\"remove guest\"\n                onClick={handleDeleteBed(i)}\n              >\n                <ClearIcon />\n              </IconButton>\n            </FormControl>\n          ))}\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            size=\"small\"\n            onClick={addBed}\n          >\n            Add a Bed\n          </Button>\n        </div>\n        <div>\n          <Button\n            className={classes.button}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n\n          {error && <p>{error.message}</p>}\n        </div>\n      </form>\n    </Paper>\n  );\n}\n\nexport default withFirebase(RoomForm);\n","import React from \"react\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nfunction RoomDeleteConfirmation({\n  openDeleteConfirmation,\n  setOpenDeleteConfirmation,\n  room,\n  onRemoveRoom,\n}) {\n  return (\n    <Dialog\n      open={openDeleteConfirmation}\n      onClose={() => {\n        setOpenDeleteConfirmation(false);\n      }}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to Delete {room.roomName}?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            setOpenDeleteConfirmation(false);\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => onRemoveRoom(room.uid)}\n          color=\"primary\"\n          autoFocus\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\nexport default RoomDeleteConfirmation;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useInput } from \"../hooks/input-hook\";\nimport RoomIcons from \"./RoomIcons\";\nimport RoomDeleteConfirmation from \"./RoomDeleteConfirmation\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Typography from \"@material-ui/core/Typography\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport KingBedIcon from \"@material-ui/icons/KingBed\";\nimport SingleBedIcon from \"@material-ui/icons/SingleBed\";\n\nconst useStyles = makeStyles((theme) => ({\n  cell: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n  grid: {\n    marginTop: theme.spacing(2),\n  },\n  card: {\n    backgroundColor: theme.palette.background.default,\n  },\n  formControl: {\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    // flexWrap: \"wrap\",\n    flexDirection: \"row\",\n  },\n  select: {\n    marginBottom: theme.spacing(0.5),\n    width: \"20vw\",\n  },\n}));\n\nfunction RoomListItem({ room, onRemoveRoom, onEditRoom }) {\n  const classes = useStyles();\n  const [editMode, setEditMode] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openDeleteConfirmation, setOpenDeleteConfirmation] = useState(false);\n\n  const { value: roomNumber, bind: bindRoomNumber } = useInput(\n    `${room.roomNumber}`\n  );\n\n  const { value: roomName, bind: bindRoomName } = useInput(`${room.roomName}`);\n\n  const [roomCapacity, setRoomCapacity] = useState(\"\");\n\n  const [amenities, setAmenities] = React.useState({\n    accessibility: false,\n    breakfast: false,\n    parking: false,\n    wifi: false,\n  });\n\n  const [beds, setBeds] = useState(\"\");\n\n  useEffect(() => {\n    setState();\n  }, []);\n\n  useEffect(() => {\n    calculateCapacity();\n  }, [beds]);\n\n  function setState() {\n    setRoomCapacity(room.roomCapacity);\n    setAmenities({ ...room.amenities });\n    setBeds(room.beds);\n  }\n  function onToggleEditMode() {\n    setEditMode(!editMode);\n  }\n\n  function onSaveEditRoom() {\n    const editedRoom = {\n      roomName,\n      roomNumber,\n      roomCapacity,\n      amenities,\n    };\n    onEditRoom(room, editedRoom);\n\n    setEditMode(false);\n  }\n\n  const handleCheckboxChange = (event) => {\n    setAmenities({ ...amenities, [event.target.name]: event.target.checked });\n  };\n\n  function handleBed(e, i) {\n    let newBedsArray = [...beds];\n    newBedsArray[i] = e.target.value;\n    setBeds(newBedsArray);\n  }\n\n  const handleDeleteBed = (i) => (e) => {\n    e.preventDefault();\n    let newBedsArray = [...beds.slice(0, i), ...beds.slice(i + 1)];\n    setBeds(newBedsArray);\n  };\n\n  const addBed = (e) => {\n    e.preventDefault();\n    let newInput = `Bed ${beds.length + 1}`;\n    let newBedsArray = beds.concat([newInput]);\n    setBeds(newBedsArray);\n  };\n\n  const calculateCapacity = () => {\n    let capacity = 0;\n    for (let i = 0; i < beds.length; i++) {\n      if (beds[i] === \"Single\") {\n        capacity += 1;\n      }\n      if (beds[i] === \"Double\" || beds[i] === \"Queen\" || beds[i] === \"King\") {\n        capacity += 2;\n      }\n    }\n\n    setRoomCapacity(capacity);\n  };\n\n  return !editMode ? (\n    <>\n      <TableRow>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          <Typography>{room.roomName}</Typography>\n        </TableCell>\n        <TableCell>{room.roomNumber} </TableCell>\n        <TableCell>{room.roomCapacity} </TableCell>\n        <TableCell>£{room.pricePerNight} </TableCell>\n        <TableCell className={classes.cell}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => onToggleEditMode()}\n            size=\"small\"\n          >\n            Edit\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => {\n              setOpenDeleteConfirmation(true);\n            }}\n            size=\"small\"\n          >\n            Delete\n          </Button>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Grid container component={Box} className={classes.grid}>\n              <Grid item xs={6}>\n                <Typography gutterBottom component=\"div\">\n                  Amenities\n                </Typography>\n\n                <RoomIcons amenities={room.amenities} />\n              </Grid>\n              <Grid item xs={6}>\n                <Typography gutterBottom component=\"div\">\n                  Beds\n                </Typography>\n                <List>\n                  {room.beds.map((bed, index) => (\n                    <ListItem key={index}>\n                      <ListItemIcon>\n                        {bed === \"Single\" ? <SingleBedIcon /> : <KingBedIcon />}\n                      </ListItemIcon>\n                      <ListItemText primary={bed} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Grid>\n            </Grid>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n      <RoomDeleteConfirmation\n        room={room}\n        setOpenDeleteConfirmation={setOpenDeleteConfirmation}\n        onRemoveRoom={onRemoveRoom}\n        openDeleteConfirmation={openDeleteConfirmation}\n      />\n    </>\n  ) : (\n    <>\n      <TableRow>\n        <TableCell></TableCell>\n        <TableCell>\n          <TextField\n            name=\"roomName\"\n            id=\"filled\"\n            label=\"Room Name\"\n            type=\"text\"\n            variant=\"filled\"\n            {...bindRoomName}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField\n            name=\"roomNumber\"\n            id=\"filled\"\n            label=\"Room Number\"\n            type=\"number\"\n            variant=\"filled\"\n            {...bindRoomNumber}\n          />\n        </TableCell>\n        <TableCell>\n          <TextField\n            name=\"roomCapacity\"\n            id=\"filled\"\n            label=\"Room Capacity\"\n            type=\"number\"\n            variant=\"filled\"\n            value={roomCapacity}\n            disabled\n          />\n        </TableCell>\n        <TableCell className={classes.cell}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => onSaveEditRoom()}\n            size=\"small\"\n          >\n            Save\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => onToggleEditMode()}\n            size=\"small\"\n          >\n            Reset\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => {\n              setOpenDeleteConfirmation(true);\n            }}\n            size=\"small\"\n          >\n            Delete\n          </Button>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell></TableCell>\n        <TableCell colSpan={6}>\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={amenities.accessibility}\n                  onChange={handleCheckboxChange}\n                  name=\"accessibility\"\n                />\n              }\n              label=\"Accessibility\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={amenities.breakfast}\n                  onChange={handleCheckboxChange}\n                  name=\"breakfast\"\n                />\n              }\n              label=\"Breakfast\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={amenities.parking}\n                  onChange={handleCheckboxChange}\n                  name=\"parking\"\n                />\n              }\n              label=\"Parking\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={amenities.wifi}\n                  onChange={handleCheckboxChange}\n                  name=\"wifi\"\n                />\n              }\n              label=\"Wifi\"\n            />\n          </FormGroup>\n        </TableCell>\n      </TableRow>\n\n      <TableRow>\n        <TableCell></TableCell>\n        <TableCell colSpan={6}>\n          {beds.map((bed, i) => (\n            <FormControl\n              key={i}\n              variant=\"filled\"\n              className={classes.formControl}\n              size=\"small\"\n            >\n              <InputLabel id=\"simple-select-label\">Beds</InputLabel>\n              <Select\n                labelId=\"simple-select-label\"\n                id=\"demo-simple-select\"\n                value={bed}\n                className={classes.select}\n                onChange={(e) => handleBed(e, i)}\n              >\n                <option value={\"Single\"}>Single</option>\n                <option value={\"Double\"}>Double</option>\n                <option value={\"Queen\"}>Queen</option>\n                <option value={\"King\"}>King</option>\n              </Select>\n              <IconButton\n                color=\"primary\"\n                aria-label=\"remove guest\"\n                onClick={handleDeleteBed(i)}\n              >\n                <ClearIcon />\n              </IconButton>\n            </FormControl>\n          ))}\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            size=\"small\"\n            onClick={addBed}\n          >\n            Add a Bed\n          </Button>\n        </TableCell>\n      </TableRow>\n      <RoomDeleteConfirmation\n        room={room}\n        setOpenDeleteConfirmation={setOpenDeleteConfirmation}\n        onRemoveRoom={onRemoveRoom}\n        openDeleteConfirmation={openDeleteConfirmation}\n      />\n    </>\n  );\n}\nexport default RoomListItem;\n","import React from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nfunction TableLoading() {\n  return (\n    <TableRow>\n      <TableCell>Loading ...</TableCell>\n    </TableRow>\n  );\n}\n\nexport default TableLoading;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport RoomListItem from \"./RoomListItem\";\nimport TableLoading from \"../Loading/TableLoading\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  container: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction RoomList({ loading, rooms, onRemoveRoom, onEditRoom }) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper} className={classes.container}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Room Name</TableCell>\n            <TableCell>Room Number</TableCell>\n            <TableCell>Room Capacity</TableCell>\n            <TableCell>Price Per Night</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {loading && <TableLoading />}\n          {rooms &&\n            rooms.map((room) => (\n              <RoomListItem\n                key={room.uid}\n                room={room}\n                onRemoveRoom={onRemoveRoom}\n                onEditRoom={onEditRoom}\n              />\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default RoomList;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { Container } from \"@material-ui/core\";\n\nimport { withFirebase } from \"../Firebase\";\nimport { withAuthorization } from \"../Session\";\n\nimport * as ROLES from \"../../constants/roles\";\nimport RoomForm from \"./RoomForm\";\nimport RoomList from \"./RoomList\";\n\nfunction Rooms(props) {\n  const [loading, setLoading] = useState(false);\n  const { rooms } = useSelector((state) => ({\n    rooms: Object.keys(state.roomState.rooms || {}).map((key) => ({\n      ...state.roomState.rooms[key],\n      uid: key,\n    })),\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!rooms.length) {\n      setLoading(true);\n    }\n    onListenForRooms();\n    return () => {\n      props.firebase.fetch(\"rooms\").off();\n    };\n  }, []);\n\n  function onListenForRooms() {\n    setLoading(true);\n\n    props.firebase.fetch(\"rooms\").on(\"value\", (snapshot) => {\n      onSetRooms(snapshot.val());\n\n      setLoading(false);\n    });\n  }\n\n  function onSetRooms(rooms) {\n    dispatch({ type: \"ROOMS_SET\", rooms });\n  }\n\n  function onRemoveRoom(uid) {\n    props.firebase.fetchId(\"rooms\", uid).remove();\n  }\n\n  function onEditRoom(room, editedRoom) {\n    props.firebase.fetchId(\"rooms\", room.uid).set({\n      ...editedRoom,\n    });\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <RoomForm />\n      <RoomList\n        loading={loading}\n        rooms={rooms.map((room) => ({\n          ...room,\n        }))}\n        onRemoveRoom={onRemoveRoom}\n        onEditRoom={onEditRoom}\n      />\n    </Container>\n  );\n}\n\nconst condition = (authUser) =>\n  (authUser && !!authUser.roles[ROLES.ADMIN]) ||\n  (authUser && !!authUser.roles[ROLES.STAFF]);\n\nexport default compose(withFirebase, withAuthorization(condition))(Rooms);\n","import Rooms from \"./Rooms\";\nimport RoomIcons from \"./RoomIcons\";\n\nexport default Rooms;\nexport { RoomIcons };\n","import React from \"react\";\nimport { RoomIcons } from \"../Rooms\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  Grid,\n  Typography,\n  Paper,\n  TextField,\n  Button,\n  Card,\n  CardContent,\n  IconButton,\n  Box,\n  CardActions,\n  FormControl,\n  Select,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport KingBedIcon from \"@material-ui/icons/KingBed\";\nimport SingleBedIcon from \"@material-ui/icons/SingleBed\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.grid,\n    padding: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    paddingRight: theme.spacing(2),\n  },\n  grid: {\n    padding: theme.spacing(2),\n  },\n  box: {\n    width: \"40wv\",\n    display: \"flex\",\n  },\n  card: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction CreateBookingEdit({\n  booking,\n  guests,\n  onToggleEditMode,\n  error,\n  handleSubmit,\n  addGuest,\n  handleGuest,\n  handleDeleteGuest,\n  selectedGuests,\n  checkInDate,\n  checkOutDate,\n  setCheckInDate,\n  setCheckOutDate,\n  setRoom,\n  room,\n  numberOfGuests,\n  setNumberOfGuests,\n  reservationMode,\n  status,\n  setStatus,\n}) {\n  const classes = useStyles();\n  const { rooms } = useSelector((state) => ({\n    rooms: Object.keys(state.roomState.rooms || {}).map((key) => ({\n      ...state.roomState.rooms[key],\n      uid: key,\n    })),\n  }));\n\n  function selectorOptions(guest) {\n    if (!!guest.lastName) {\n      return (\n        guest.firstName +\n        \" \" +\n        guest.lastName +\n        \" \" +\n        guest.dateOfBirth +\n        \" \" +\n        guest.email\n      );\n    } else {\n      return guest.firstName;\n    }\n  }\n\n  return (\n    <>\n      {booking && (\n        <Grid container spacing={3} component={Paper} className={classes.root}>\n          {!reservationMode ? (\n            <Grid item xs={12}>\n              <Typography variant=\"h4\">Confirm details</Typography>\n            </Grid>\n          ) : null}\n          <Grid item xs={6}>\n            <Card>\n              <CardContent>\n                <Typography>Booking Details</Typography>\n                <TextField\n                  name=\"checkInDate\"\n                  id=\"date\"\n                  label=\"Check In Date\"\n                  className={classes.textField}\n                  variant=\"filled\"\n                  type=\"date\"\n                  value={checkInDate}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) => setCheckInDate(e.target.value)}\n                />\n                <TextField\n                  name=\"checkOutDate\"\n                  id=\"date\"\n                  label=\"Check Out Date\"\n                  type=\"date\"\n                  className={classes.textField}\n                  variant=\"filled\"\n                  value={checkOutDate}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) => setCheckOutDate(e.target.value)}\n                />\n                <TextField\n                  disabled\n                  name=\"numberOfPeople\"\n                  id=\"filled-margin-none\"\n                  label=\"Number Of People\"\n                  type=\"number\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                  onChange={(e) => setNumberOfGuests(e.target.value)}\n                  value={numberOfGuests}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              </CardContent>\n            </Card>\n            <Card className={classes.card}>\n              <CardContent>\n                <Typography>Select Guests:</Typography>\n                {selectedGuests.map((selectedGuest, index) => (\n                  <Grid key={index} item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      options={guests}\n                      getOptionLabel={(guest) => selectorOptions(guest)}\n                      size=\"small\"\n                      onChange={(event, guest) => handleGuest(index, guest)}\n                      value={selectedGuest}\n                      getOptionSelected={(option, value) =>\n                        option.firstName === value.firstName\n                      }\n                      rend\n                      renderInput={(params) => (\n                        <Box component=\"div\" className={classes.box}>\n                          <TextField {...params} variant=\"outlined\" />\n                          <IconButton\n                            color=\"primary\"\n                            aria-label=\"remove guest\"\n                            onClick={handleDeleteGuest(index)}\n                          >\n                            <ClearIcon />\n                          </IconButton>\n                        </Box>\n                      )}\n                    />\n                  </Grid>\n                ))}\n              </CardContent>\n              <CardActions>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  type=\"button\"\n                  size=\"small\"\n                  onClick={addGuest}\n                >\n                  Add Guest\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Card>\n              {room && (\n                <CardContent>\n                  <Typography>Room Details</Typography>\n                  <Autocomplete\n                    id=\"combo-box-demo\"\n                    options={rooms}\n                    getOptionLabel={(room) =>\n                      room.roomName + \" Capacity:\" + room.roomCapacity\n                    }\n                    size=\"small\"\n                    onChange={(event, room) => setRoom(room)}\n                    value={room}\n                    getOptionSelected={(option, value) =>\n                      option.roomName === value.roomName\n                    }\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                  <RoomIcons amenities={room.amenities} />\n                  <List>\n                    {room.beds.map((bed, index) => (\n                      <ListItem key={index}>\n                        <ListItemIcon>\n                          {bed === \"Single\" ? (\n                            <SingleBedIcon />\n                          ) : (\n                            <KingBedIcon />\n                          )}\n                        </ListItemIcon>\n                        <ListItemText primary={bed} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </CardContent>\n              )}\n            </Card>\n            {reservationMode ? (\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography>Status</Typography>\n                  <FormControl\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                    size=\"small\"\n                    fullWidth\n                  >\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"Status\"\n                      value={status}\n                      onChange={(e) => setStatus(e.target.value)}\n                    >\n                      <MenuItem value={\"Started\"}>Started</MenuItem>\n                      <MenuItem value={\"Booked\"}>Booked</MenuItem>\n                      <MenuItem value={\"Checked In\"}>Checked In</MenuItem>\n                      <MenuItem value={\"Complete\"}>Complete</MenuItem>\n                    </Select>\n                  </FormControl>\n                </CardContent>\n              </Card>\n            ) : null}\n          </Grid>\n          {!reservationMode ? (\n            <Grid item xs={12}>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                type=\"button\"\n                onClick={() => onToggleEditMode()}\n                size=\"small\"\n              >\n                Cancel\n              </Button>\n\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                type=\"button\"\n                size=\"small\"\n                onClick={(e) => handleSubmit(e)}\n              >\n                Submit\n              </Button>\n\n              {error && <p>{error.message}</p>}\n            </Grid>\n          ) : null}\n        </Grid>\n      )}\n    </>\n  );\n}\n\nexport default CreateBookingEdit;\n","import React from \"react\";\nimport { RoomIcons } from \"../Rooms\";\n\nimport {\n  Grid,\n  Typography,\n  Paper,\n  TextField,\n  Button,\n  Card,\n  CardContent,\n  IconButton,\n  Box,\n  CardActions,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginTop: \"10px\",\n    backgroundColor: theme.palette.background.grid,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  grid: {\n    padding: theme.spacing(2),\n  },\n  box: {\n    width: \"40wv\",\n    display: \"flex\",\n    // \"align-items\": \"baseline\",\n  },\n  card: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction CreateBookingNew({\n  booking,\n  guests,\n  onToggleEditMode,\n  error,\n  handleSubmit,\n  addGuest,\n  handleGuest,\n  handleDeleteGuest,\n  selectedGuests,\n  checkInDate,\n  checkOutDate,\n  room,\n  numberOfGuests,\n}) {\n  const classes = useStyles();\n\n  function selectorOptions(guest) {\n    if (!!guest.lastName) {\n      return (\n        guest.firstName +\n        \" \" +\n        guest.lastName +\n        \" \" +\n        guest.dateOfBirth +\n        \" \" +\n        guest.email\n      );\n    } else {\n      return guest.firstName;\n    }\n  }\n\n  return (\n    <>\n      {booking && (\n        <Grid container spacing={3} component={Paper} className={classes.root}>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\">Confirm details</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Card>\n              <CardContent>\n                <Typography>Check In Date: {checkInDate}</Typography>\n                <Typography>Check Out Date: {checkOutDate}</Typography>\n                <Typography> Number of Guests: {numberOfGuests}</Typography>\n              </CardContent>\n            </Card>\n            <Card className={classes.card}>\n              <CardContent>\n                <Typography>Select Guests:</Typography>\n                {selectedGuests.map((selectedGuest, index) => (\n                  <Grid key={index} item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      options={guests}\n                      getOptionLabel={(guest) => selectorOptions(guest)}\n                      size=\"small\"\n                      onChange={(event, guest) => handleGuest(index, guest)}\n                      value={selectedGuest}\n                      getOptionSelected={(option, value) =>\n                        option.firstName === value.firstName\n                      }\n                      renderInput={(params) => (\n                        <Box component=\"div\" className={classes.box}>\n                          <TextField {...params} variant=\"outlined\" />\n                          <IconButton\n                            color=\"primary\"\n                            aria-label=\"remove guest\"\n                            onClick={handleDeleteGuest(index)}\n                          >\n                            <ClearIcon />\n                          </IconButton>\n                        </Box>\n                      )}\n                    />\n                  </Grid>\n                ))}\n              </CardContent>\n              <CardActions>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  type=\"button\"\n                  size=\"small\"\n                  onClick={addGuest}\n                >\n                  Add Guest\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={6}>\n            <Card>\n              {room && (\n                <CardContent>\n                  <Typography>Room Name: {room.roomName}</Typography>\n                  <RoomIcons amenities={room.amenities} />\n                </CardContent>\n              )}\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"button\"\n              onClick={() => onToggleEditMode()}\n              size=\"small\"\n            >\n              edit\n            </Button>\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"button\"\n              size=\"small\"\n              onClick={(event) => handleSubmit(event)}\n            >\n              Submit\n            </Button>\n\n            {error && <p>{error.message}</p>}\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n}\n\nexport default CreateBookingNew;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport CreateBookingEdit from \"./CreateBookingEdit\";\nimport CreateBookingNew from \"./CreateBookingNew\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Container, Paper } from \"@material-ui/core\";\n\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction CreateBooking(props) {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [selectedGuests, setSelectedGuests] = useState([]);\n  const [checkInDate, setCheckInDate] = useState(\"\");\n  const [checkOutDate, setCheckOutDate] = useState(\"\");\n  const [numberOfGuests, setNumberOfGuests] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const { id } = useParams();\n  const [status, setStatus] = useState(\"\");\n  const { booking, guests } = useSelector((state) => ({\n    booking: Object.keys(state.bookingState.bookings || {})\n      .map((key) => ({\n        ...state.bookingState.bookings[key],\n        uid: key,\n      }))\n      .find((booking) => booking.uid === id),\n    guests: Object.keys(state.guestState.guests || {}).map((key) => ({\n      ...state.guestState.guests[key],\n      uid: key,\n    })),\n  }));\n\n  const { bookedRoom } = useSelector((state) => ({\n    bookedRoom: Object.keys(state.roomState.rooms || {})\n      .map((key) => ({\n        ...state.roomState.rooms[key],\n        uid: key,\n      }))\n      .find((room) => room.uid === booking.roomId),\n  }));\n\n  useEffect(() => {\n    if (!booking) {\n      setLoading(true);\n    }\n    if (!!booking) {\n      settingState();\n    }\n  }, [booking]);\n\n  useEffect(() => {\n    setNumberOfGuests(selectedGuests.length);\n  }, [selectedGuests]);\n\n  function settingState() {\n    if (!checkInDate || !room) {\n      setCheckInDate(booking.checkInDate);\n      setCheckOutDate(booking.checkOutDate);\n      setRoom(bookedRoom);\n      setNumberOfGuests(booking.numberOfGuests);\n      setLoading(false);\n      setStatus(\"Booked\");\n      initialGuests();\n    }\n  }\n\n  function initialGuests() {\n    let newGuestsArray = [...selectedGuests];\n    if (selectedGuests.length < booking.numberOfGuests) {\n      for (let i = 0; i < booking.numberOfGuests; i++) {\n        let newInput = { firstName: `guest ${i + 1}` };\n        newGuestsArray.push(newInput);\n      }\n    }\n    setSelectedGuests(newGuestsArray);\n  }\n\n  function onToggleEditMode() {\n    setEditMode(!editMode);\n  }\n\n  function handleGuest(i, newGuest) {\n    let newGuestsArray = [...selectedGuests];\n    newGuestsArray[i] = newGuest;\n    setSelectedGuests(newGuestsArray);\n  }\n\n  const handleDeleteGuest = (i) => (e) => {\n    e.preventDefault();\n    let newGuestsArray = [\n      ...selectedGuests.slice(0, i),\n      ...selectedGuests.slice(i + 1),\n    ];\n    setSelectedGuests(newGuestsArray);\n  };\n\n  const addGuest = (e) => {\n    e.preventDefault();\n    let newInput = { firstName: `guest ${selectedGuests.length + 1}` };\n    let newGuestsArray = selectedGuests.concat([newInput]);\n    setSelectedGuests(newGuestsArray);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const roomId = room.uid;\n    const guests = selectedGuests;\n    const editedBooking = {\n      guests,\n      checkInDate,\n      checkOutDate,\n      roomId,\n      status,\n      numberOfGuests,\n    };\n\n    props.firebase\n      .fetchId(\"bookings\", booking.uid)\n      .set({ ...editedBooking })\n      .then(() => {\n        alert(\n          `Booking made for the ${checkInDate} to the ${checkOutDate} in the ${room.roomName} room for ${selectedGuests.length} guests.\n          Booking confirmation number ${booking.uid}`\n        );\n        props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      {loading && (\n        <Paper className={classes.paper}>\n          <p>Loading...</p>\n        </Paper>\n      )}\n      {editMode ? (\n        <CreateBookingEdit\n          booking={booking}\n          guests={guests}\n          onToggleEditMode={onToggleEditMode}\n          error={error}\n          checkInDate={checkInDate}\n          checkOutDate={checkOutDate}\n          setCheckInDate={setCheckInDate}\n          setCheckOutDate={setCheckOutDate}\n          handleSubmit={handleSubmit}\n          addGuest={addGuest}\n          handleGuest={handleGuest}\n          handleDeleteGuest={handleDeleteGuest}\n          selectedGuests={selectedGuests}\n          setRoom={setRoom}\n          room={room}\n          numberOfGuests={numberOfGuests}\n          setNumberOfGuests={setNumberOfGuests}\n          status={status}\n        />\n      ) : (\n        <CreateBookingNew\n          booking={booking}\n          guests={guests}\n          onToggleEditMode={onToggleEditMode}\n          error={error}\n          handleSubmit={handleSubmit}\n          addGuest={addGuest}\n          handleGuest={handleGuest}\n          handleDeleteGuest={handleDeleteGuest}\n          selectedGuests={selectedGuests}\n          checkInDate={checkInDate}\n          checkOutDate={checkOutDate}\n          room={room}\n          numberOfGuests={numberOfGuests}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst condition = (authUser) =>\n  (authUser && !!authUser.roles[ROLES.ADMIN]) ||\n  (authUser && !!authUser.roles[ROLES.STAFF]);\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition)\n)(CreateBooking);\n","import Bookings from \"./Bookings\";\nimport CreateBooking from \"./CreateBooking\";\nimport CreateBookingEdit from \"./CreateBookingEdit\";\n\nexport default Bookings;\nexport { CreateBooking, CreateBookingEdit };\n","import React from \"react\";\n\nexport default function Activities() {\n  return <h1>Activities</h1>;\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROLES from \"../../constants/roles\";\n\nimport {\n  makeStyles,\n  TableRow,\n  TableCell,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  InputLabel,\n  Select,\n  MenuItem,\n  DialogTitle,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  textField: {\n    marginBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  row: {\n    cursor: \"pointer\",\n  },\n  button: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction StaffListItem(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { user } = props;\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [currentRole, setCurrentRole] = useState(\"\");\n\n  useEffect(() => {\n    setUsername(user.username);\n    setEmail(user.email);\n    setCurrentRole(Object.keys(user.roles));\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const roles = {};\n    roles[currentRole] = currentRole;\n    const editedUser = {\n      username,\n      email,\n      roles,\n    };\n\n    props.firebase\n      .fetchId(\"users\", user.uid)\n      .set(editedUser)\n      .then(() => {\n        alert(`You have Edited ${username}`);\n        setOpen(false);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  };\n\n  function onRemoveUser(uid) {\n    props.firebase.fetchId(\"users\", uid).remove();\n  }\n\n  const handleSelectorChange = (e) => {\n    setCurrentRole(e.target.value);\n  };\n\n  return (\n    <>\n      <TableRow hover className={classes.row}>\n        <TableCell>{username}</TableCell>\n        <TableCell>{email}</TableCell>\n        <TableCell>{currentRole}</TableCell>\n        <TableCell>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => setOpen(true)}\n            size=\"small\"\n          >\n            Edit\n          </Button>\n          <Button\n            onClick={() => onRemoveUser(user.uid)}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            size=\"small\"\n          >\n            Delete\n          </Button>\n        </TableCell>\n      </TableRow>\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"form-dialog\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{user.uid}</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit} className={classes.root}>\n            <TextField\n              name=\"username\"\n              id=\"standard-basic\"\n              label=\"Username\"\n              type=\"text\"\n              className={classes.textField}\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Status\n            </InputLabel>\n\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              label=\"Status\"\n              value={currentRole}\n              onChange={handleSelectorChange}\n            >\n              <MenuItem value={ROLES.ADMIN}>ADMIN</MenuItem>\n              <MenuItem value={ROLES.STAFF}>STAFF</MenuItem>\n              <MenuItem value={ROLES.GUEST}>GUEST</MenuItem>\n            </Select>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          {error && <p>{error.message}</p>}\n          <Button\n            onClick={handleSubmit}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"submit\"\n            className={classes.button}\n          >\n            Save\n          </Button>\n\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            className={classes.button}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default withFirebase(StaffListItem);\n","import React, { useState, useEffect } from \"react\";\nimport { compose } from \"recompose\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nimport StaffListItem from \"./StaffListItem\";\nimport TableLoading from \"../Loading/TableLoading\";\nimport * as ROLES from \"../../constants/roles\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  container: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction Staff(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const { users } = useSelector((state) => ({\n    users: Object.keys(state.userState.users || {}).map((key) => ({\n      ...state.userState.users[key],\n      uid: key,\n    })),\n  }));\n\n  useEffect(() => {\n    if (!users.length) {\n      setLoading(true);\n    }\n    onListenForUsers();\n    return () => {\n      props.firebase.fetch(\"users\").off();\n    };\n  }, [users]);\n\n  function onListenForUsers() {\n    props.firebase.fetch(\"users\").on(\"value\", (snapshot) => {\n      onSetUsers(snapshot.val());\n    });\n\n    setLoading(false);\n  }\n\n  function onSetUsers(users) {\n    dispatch({ type: \"USERS_SET\", users });\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Paper className={classes.container}>\n        <h2>Staff</h2>\n        <TableContainer>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Username</TableCell>\n                <TableCell>Email Address</TableCell>\n                <TableCell>Role</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading && <TableLoading />}\n              {users &&\n                users.map((user) => (\n                  <StaffListItem key={user.uid} user={user} />\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Container>\n  );\n}\n\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\n\nexport default compose(withFirebase, withAuthorization(condition))(Staff);\n","import Staff from \"./Staff\";\n\nexport default Staff;\n","import React, { useState } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useInput } from \"../hooks/input-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"20vw\",\n  },\n  textField: {\n    marginBottom: theme.spacing(1),\n  },\n  button: {\n    width: theme.spacing(35),\n  },\n}));\n\nfunction PasswordChangeForm(props) {\n  const classes = useStyles();\n  const [error, setError] = useState(\"\");\n  const {\n    value: passwordOne,\n    bind: bindPasswordOne,\n    reset: resetPasswordOne,\n  } = useInput(\"\");\n\n  const {\n    value: passwordTwo,\n    bind: bindPasswordTwo,\n    reset: resetPasswordTwo,\n  } = useInput(\"\");\n\n  const onSubmit = (event) => {\n    props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        resetPasswordOne();\n        resetPasswordTwo();\n      })\n      .catch((error) => {\n        setError(error);\n      });\n    event.preventDefault();\n  };\n\n  const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n  return (\n    <form onSubmit={onSubmit} className={classes.root}>\n      <Typography variant=\"h5\" gutterBottom>\n        Change Password\n      </Typography>\n      <TextField\n        id=\"filled-margin-none\"\n        className={classes.textField}\n        name=\"passwordOne\"\n        type=\"password\"\n        variant=\"filled\"\n        size=\"small\"\n        placeholder=\"New password\"\n        {...bindPasswordOne}\n      />\n      <TextField\n        id=\"filled-margin-none\"\n        className={classes.textField}\n        name=\"passwordTwo\"\n        type=\"password\"\n        variant=\"filled\"\n        size=\"small\"\n        placeholder=\"Confirm New Password\"\n        {...bindPasswordTwo}\n      />\n      <Button\n        className={classes.button}\n        disabled={isInvalid}\n        color=\"secondary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Reset My Password\n      </Button>\n\n      {error && <p>{error.message}</p>}\n    </form>\n  );\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\n\nimport { Container, Typography, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { withAuthorization } from \"../Session\";\nimport PasswordChangeForm from \"../PasswordChange\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction Account({ authUser }) {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Paper className={classes.root}>\n        <Typography variant=\"h4\" gutterBottom>\n          Account: {authUser.email}\n        </Typography>\n        <PasswordChangeForm />\n      </Paper>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withAuthorization(condition)\n)(Account);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.users.length) {\n      this.setState({ loading: true });\n    }\n    this.props.firebase.users().on(\"value\", (snapshot) => {\n      this.props.onSetUsers(snapshot.val());\n    });\n\n    this.setState({ loading: false });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n\n        <ul>\n          {users.map((user) => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <span>\n                <Link to={`${ROUTES.ADMIN}/${user.uid}`}>Details</Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  users: Object.keys(state.userState.users || {}).map((key) => ({\n    ...state.userState.users[key],\n    uid: key,\n  })),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSetUsers: (users) => dispatch({ type: \"USERS_SET\", users }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(mapStateToProps, mapDispatchToProps)\n)(UserList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\n\nimport { withFirebase } from \"../Firebase\";\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.user) {\n      this.setState({ loading: true });\n    }\n\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on(\"value\", (snapshot) => {\n        this.props.onSetUsers(snapshot.val(), this.props.match.params.id);\n\n        this.setState({ loading: false });\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.props.user.email);\n  };\n\n  render() {\n    const { user } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>User ({this.props.match.params.id})</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <span>\n              <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n              ></button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, props) => ({\n  users: (state.userState.users || {})[props.match.params.id],\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSetUsers: (users, uid) => dispatch({ type: \"USER_SET\", users, uid }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(mapStateToProps, mapDispatchToProps)\n)(UserItem);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization } from \"../Session\";\nimport { UserList, UserItem } from \"../Users\";\nimport * as ROLES from \"../../constants/roles\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst Admin = () => (\n  <div>\n    <h1>Admin</h1>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <Switch>\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n    </Switch>\n  </div>\n);\n\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\n\nexport default compose(withAuthorization(condition))(Admin);\n","import React, { useState } from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography, TextField, Button } from \"@material-ui/core/\";\n\nfunction GuestSearch({ classes, guests, setFilteredGuests }) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let query = [\n      firstName,\n      lastName,\n      dateOfBirth,\n      contactNumber,\n      email,\n      address,\n      postcode,\n    ];\n    const filteredGuests = guests.filter((guest) => {\n      if (\n        query[0] &&\n        !guest.firstName.toLowerCase().includes(query[0].toLowerCase())\n      ) {\n        return false;\n      }\n      if (\n        query[1] &&\n        !guest.lastName.toLowerCase().includes(query[0].toLowerCase())\n      ) {\n        return false;\n      }\n      if (query[2] && !guest.dateOfBirth.includes(query[2])) {\n        return false;\n      }\n      if (query[3] && !guest.contactNumber.includes(query[3])) {\n        return false;\n      }\n      if (\n        query[4] &&\n        !guest.email.toLowerCase().includes(query[4].toLowerCase())\n      ) {\n        return false;\n      }\n      if (\n        query[5] &&\n        !guest.address.toLowerCase().includes(query[5].toLowerCase())\n      ) {\n        return false;\n      }\n      if (\n        query[6] &&\n        !guest.postcode.toLowerCase().includes(query[6].toLowerCase())\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    setFilteredGuests(filteredGuests);\n  };\n\n  return (\n    <Paper className={classes.container}>\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Search Guests\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <div className={classes.divider}>\n          <TextField\n            name=\"firstName\"\n            id=\"filled-basic\"\n            label=\"First Name\"\n            className={classes.textField}\n            variant=\"filled\"\n            type=\"text\"\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n          <TextField\n            name=\"lastName\"\n            id=\"filled-basic\"\n            label=\"Last Name\"\n            className={classes.textField}\n            variant=\"filled\"\n            type=\"text\"\n            onChange={(e) => setLastName(e.target.value)}\n          />\n          <TextField\n            name=\"dateOfBirth\"\n            id=\"date\"\n            label=\"Date Of Birth\"\n            className={classes.textField}\n            variant=\"filled\"\n            type=\"date\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => setDateOfBirth(e.target.value)}\n          />\n          <TextField\n            name=\"contactNumber\"\n            id=\"filled-basic\"\n            label=\"Contact Number\"\n            type=\"number\"\n            className={classes.textField}\n            variant=\"filled\"\n            onChange={(e) => setContactNumber(e.target.value)}\n          />\n        </div>\n        <div className={classes.divider}>\n          <TextField\n            name=\"email\"\n            id=\"filled-basic\"\n            label=\"Email\"\n            className={classes.textField}\n            variant=\"filled\"\n            type=\"text\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            name=\"address\"\n            id=\"filled-margin-none\"\n            label=\"Address\"\n            className={classes.textField}\n            type=\"text\"\n            variant=\"filled\"\n            onChange={(e) => setAddress(e.target.value)}\n          />\n          <TextField\n            name=\"postcode\"\n            id=\"filled-basic\"\n            label=\"Postcode\"\n            className={classes.textField}\n            variant=\"filled\"\n            type=\"text\"\n            onChange={(e) => setPostcode(e.target.value)}\n          />\n        </div>\n        <div className={classes.divider}>\n          <Button\n            className={classes.button}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    </Paper>\n  );\n}\n\nexport default GuestSearch;\n","import React, { useState, useEffect } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nimport {\n  makeStyles,\n  Radio,\n  TableRow,\n  TableCell,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Checkbox,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(2),\n      width: 300,\n    },\n    \" & .MuiFormControl-root\": {\n      margin: theme.spacing(2),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  row: {\n    cursor: \"pointer\",\n  },\n}));\n\nfunction GuestListItem(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = useState(\"\");\n  const { guest, selected, setSelected, index } = props;\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n\n  useEffect(() => {\n    setFirstName(`${guest.firstName}`);\n    setLastName(`${guest.lastName}`);\n    setGender(`${guest.gender}`);\n    setDateOfBirth(`${guest.dateOfBirth}`);\n    setContactNumber(`${guest.contactNumber}`);\n    setEmail(`${guest.email}`);\n    setAddress(`${guest.address}`);\n    setPostcode(`${guest.postcode}`);\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const editedGuest = {\n      firstName,\n      lastName,\n      gender,\n      dateOfBirth,\n      contactNumber,\n      email,\n      address,\n      postcode,\n    };\n\n    props.firebase\n      .fetchId(\"guests\", guest.uid)\n      .set({\n        ...editedGuest,\n      })\n      .then(() => {\n        alert(`You have Edited \n    ${firstName} \n    ${lastName} \n    ${gender} \n    ${dateOfBirth} \n    ${contactNumber} \n    ${email} \n    ${address} \n    ${postcode} \n    `);\n        setOpen(false);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  };\n\n  function onRemoveGuest(uid) {\n    props.firebase.fetchId(\"guests\", uid).remove();\n  }\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n  // const isItemSelected = isSelected(guest.firstName);\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n  const labelId = `enhanced-table-checkbox-${index}`;\n\n  return (\n    <>\n      <TableRow\n        hover\n        onClick={(event) => handleClick(event, guest.uid)}\n        className={classes.row}\n        role=\"checkbox\"\n        aria-checked={isSelected(guest.uid)}\n        tabIndex={-1}\n        key={guest.fistName}\n        selected={isSelected(guest.uid)}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={isSelected(guest.uid)}\n            inputProps={{ \"aria-labelledby\": labelId }}\n          />\n        </TableCell>\n\n        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n          {firstName + \" \" + lastName}\n        </TableCell>\n        <TableCell>{dateOfBirth}</TableCell>\n        <TableCell>{contactNumber}</TableCell>\n        <TableCell>{email}</TableCell>\n        <TableCell>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => setOpen(true)}\n            size=\"small\"\n          >\n            Edit\n          </Button>\n        </TableCell>\n      </TableRow>\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {firstName + \" \" + lastName}\n        </DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit} className={classes.root}>\n            <TextField\n              name=\"firstName\"\n              id=\"standard-basic\"\n              label=\"First Name\"\n              type=\"text\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n\n            <TextField\n              name=\"lastName\"\n              id=\"standard-basic\"\n              label=\"Last Name\"\n              type=\"text\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <TextField\n              name=\"dateOfBirth\"\n              id=\"date\"\n              label=\"Date Of Birth\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              value={dateOfBirth}\n              onChange={(e) => setDateOfBirth(e.target.value)}\n            />\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Gender</FormLabel>\n              <RadioGroup\n                row\n                aria-label=\"gender\"\n                name=\"gender\"\n                value={gender}\n                onChange={(e) => setGender(e.target.value)}\n              >\n                <FormControlLabel\n                  value=\"Female\"\n                  control={<Radio />}\n                  label=\"Female\"\n                />\n                <FormControlLabel\n                  value=\"Male\"\n                  control={<Radio />}\n                  label=\"Male\"\n                />\n                <FormControlLabel\n                  value=\"Other\"\n                  control={<Radio />}\n                  label=\"Other\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              name=\"contactNumber\"\n              id=\"standard-basic\"\n              label=\"Contact Number\"\n              type=\"tel\"\n              value={contactNumber}\n              onChange={(e) => setContactNumber(e.target.value)}\n            />\n            <TextField\n              name=\"email\"\n              id=\"standard-basic\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <TextField\n              name=\"address\"\n              id=\"standard-basic\"\n              label=\"Address\"\n              multiline\n              rows={4}\n              type=\"text\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n            <TextField\n              name=\"postcode\"\n              id=\"standard-basic\"\n              label=\"Postcode\"\n              type=\"text\"\n              value={postcode}\n              onChange={(e) => setPostcode(e.target.value)}\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          {error && <p>{error.message}</p>}\n          <Button\n            onClick={handleSubmit}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Save\n          </Button>\n          <Button\n            onClick={() => onRemoveGuest(guest.uid)}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Delete\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default withFirebase(GuestListItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst headCells = [\n  { id: \"firstName\", disablePadding: true, label: \"Full Name\" },\n  {\n    id: \"dateOfBirth\",\n    disablePadding: false,\n    label: \"Date Of Birth\",\n  },\n  {\n    id: \"contactNumber\",\n    disablePadding: false,\n    label: \"Contact Number\",\n  },\n  { id: \"email\", disablePadding: false, label: \"Email\" },\n];\n\nfunction TableHeads(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all guests\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell></TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\nTableHeads.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default TableHeads;\n","import React, { useState } from \"react\";\nimport TableLoading from \"../Loading/TableLoading\";\n\nimport GuestListItem from \"./GuestListItem\";\nimport TableHeads from \"./TableHeads\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\n\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction GuestList({\n  guests,\n  loading,\n  selected,\n  setSelected,\n  page,\n  rowsPerPage,\n}) {\n  const classes = useStyles();\n  const [orderBy, setOrderBy] = useState(\"firstName\");\n  const [order, setOrder] = useState(\"asc\");\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = guests.map((n) => n.uid);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHeads\n          classes={classes}\n          numSelected={selected.length}\n          order={order}\n          orderBy={orderBy}\n          onSelectAllClick={handleSelectAllClick}\n          onRequestSort={handleRequestSort}\n          rowCount={guests.length}\n        />\n        <TableBody>\n          {loading && <TableLoading />}\n          {guests &&\n            stableSort(guests, getComparator(order, orderBy))\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((guest, index) => (\n                <GuestListItem\n                  key={guest.uid}\n                  guest={guest}\n                  index={index}\n                  selected={selected}\n                  setSelected={setSelected}\n                />\n              ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default GuestList;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.contrastText,\n          backgroundColor: lighten(theme.palette.primary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst TableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, deleteAllSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Guests\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteAllSelected}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default TableToolbar;\n","import React, { useState, useEffect } from \"react\";\nimport { compose } from \"recompose\";\nimport { useSelector } from \"react-redux\";\n\nimport { withAuthorization } from \"../Session\";\n\nimport GuestSearch from \"./GuestSearch\";\nimport GuestList from \"./GuestList\";\nimport TableToolbar from \"./TableToolbar\";\nimport * as ROLES from \"../../constants/roles\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    width: \"15wv\",\n  },\n  divider: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction Guests(props) {\n  const [loading, setLoading] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [openDeleteConfirmation, setOpenDeleteConfirmation] = useState(false);\n  const [filteredGuests, setFilteredGuests] = useState(\"\");\n  const { guests } = useSelector((state) => ({\n    guests: Object.keys(state.guestState.guests || {}).map((key) => ({\n      ...state.guestState.guests[key],\n      uid: key,\n    })),\n  }));\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (!guests.length) {\n      setLoading(true);\n    }\n    if (!filteredGuests.length) {\n      setFilteredGuests(guests);\n    }\n\n    setLoading(false);\n  }, [filteredGuests]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  async function loopDelete() {\n    for (let i = 0; i < selected.length; i++) {\n      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));\n      props.firebase.fetchId(\"guests\", selected[i]).remove();\n    }\n  }\n\n  function handleDeleteAllSelected() {\n    if (selected.length > 1) {\n      loopDelete();\n      setOpenDeleteConfirmation(false);\n      setSelected([]);\n    } else {\n      props.firebase.fetchId(\"guests\", selected).remove();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <GuestSearch\n        classes={classes}\n        guests={guests}\n        setFilteredGuests={setFilteredGuests}\n      />\n\n      <Paper className={classes.container}>\n        <TableToolbar\n          numSelected={selected.length}\n          deleteAllSelected={() => setOpenDeleteConfirmation(true)}\n        />\n        <GuestList\n          guests={filteredGuests}\n          loading={loading}\n          selected={selected}\n          setSelected={setSelected}\n          page={page}\n          rowsPerPage={rowsPerPage}\n        />\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50, 100]}\n          component=\"div\"\n          count={guests.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        <Dialog\n          open={openDeleteConfirmation}\n          onClose={() => {\n            setOpenDeleteConfirmation(false);\n          }}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you want to Delete the selected {selected.length}{\" \"}\n              guests?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                setOpenDeleteConfirmation(false);\n              }}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n            <Button onClick={handleDeleteAllSelected} color=\"primary\" autoFocus>\n              Confirm\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Paper>\n    </Container>\n  );\n}\n\nconst condition = (authUser) =>\n  (authUser && !!authUser.roles[ROLES.ADMIN]) ||\n  (authUser && !!authUser.roles[ROLES.STAFF]);\n\nexport default compose(withAuthorization(condition))(Guests);\n","import Guests from \"./Guests\";\n\nexport default Guests;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { withFirebase } from \"../Firebase\";\nimport { CreateBookingEdit } from \"../Booking\";\n\nimport {\n  makeStyles,\n  TableRow,\n  TableCell,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Checkbox,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(2),\n      width: 300,\n    },\n    \" & .MuiFormControl-root\": {\n      margin: theme.spacing(2),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  row: {\n    cursor: \"pointer\",\n  },\n  button: {\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  buttonCell: {\n    display: \"flex\",\n    \"justify-content\": \"space-evenly\",\n    flexWrap: \"wrap\",\n  },\n}));\n\nfunction ReservationListItem(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [openDeleteConfirmation, setOpenDeleteConfirmation] = useState(false);\n  const { reservation, error, setError, selected, setSelected, index } = props;\n  const [checkInDate, setCheckInDate] = useState(\"\");\n  const [checkOutDate, setCheckOutDate] = useState(\"\");\n  const [numberOfGuests, setNumberOfGuests] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [selectedGuests, setSelectedGuests] = useState([\n    { firstName: \"guest 1\" },\n  ]);\n  const [reservationMode] = useState(true);\n  const { guests } = useSelector((state) => ({\n    guests: Object.keys(state.guestState.guests || {}).map((key) => ({\n      ...state.guestState.guests[key],\n      uid: key,\n    })),\n  }));\n\n  const { bookedRoom } = useSelector((state) => ({\n    bookedRoom: Object.keys(state.roomState.rooms || {})\n      .map((key) => ({\n        ...state.roomState.rooms[key],\n        uid: key,\n      }))\n      .find((room) => room.uid === reservation.roomId),\n  }));\n\n  useEffect(() => {\n    if (!room) {\n      settingState();\n    }\n  }, [room]);\n\n  function settingState() {\n    if (!checkInDate) {\n      setCheckInDate(reservation.checkInDate);\n      setCheckOutDate(reservation.checkOutDate);\n      setRoom(bookedRoom);\n      setNumberOfGuests(reservation.numberOfGuests);\n      setStatus(reservation.status);\n      if (!!reservation.guests) {\n        setSelectedGuests(reservation.guests);\n      }\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const guests = selectedGuests;\n    const editedReservation = {\n      guests,\n      checkInDate,\n      checkOutDate,\n      room,\n      status,\n      numberOfGuests,\n    };\n\n    props.firebase\n      .fetchId(\"bookings\", reservation.uid)\n      .set({ ...editedReservation })\n      .then(() => {\n        alert(\n          `Booking edited for the ${checkInDate} to the ${checkOutDate} in the ${room.roomName} room for ${selectedGuests.length} guests.\n          Booking confirmation number ${reservation.uid}`\n        );\n        handleClose();\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  };\n\n  function onRemoveReservation() {\n    props.firebase.fetchId(\"bookings\", reservation.uid).remove();\n  }\n\n  const openConfirmation = () => {\n    setOpenDeleteConfirmation(true);\n  };\n  const closeConfirmation = () => {\n    setOpenDeleteConfirmation(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleGuest(i, selectedGuest) {\n    let newSelectedGuests = [...selectedGuests];\n    newSelectedGuests[i] = selectedGuest;\n\n    setSelectedGuests(newSelectedGuests);\n  }\n\n  const handleDeleteGuest = (i) => (e) => {\n    e.preventDefault();\n    let newSelectedGuests = [\n      ...selectedGuests.slice(0, i),\n      ...selectedGuests.slice(i + 1),\n    ];\n    console.log(newSelectedGuests);\n    setSelectedGuests(newSelectedGuests);\n  };\n\n  const addGuest = (e) => {\n    e.preventDefault();\n    let guestNumber = selectedGuests.length + 1;\n    let newInput = { firstName: `guest ${guestNumber}` };\n    let newSelectedGuests = selectedGuests.concat([newInput]);\n    setSelectedGuests(newSelectedGuests);\n  };\n\n  const checkIn = () => {\n    setStatus(\"Checked In\");\n    const status = \"Checked In\";\n    props.firebase\n      .fetchId(\"bookings\", reservation.uid)\n      .update({ status })\n      .catch((error) => {\n        setError({ error });\n      });\n  };\n\n  const checkOut = () => {\n    setStatus(\"Completed\");\n    const status = \"Completed\";\n    props.firebase\n      .fetchId(\"bookings\", reservation.uid)\n      .update({ status })\n      .catch((error) => {\n        setError({ error });\n      });\n  };\n  function ConditionalButtons() {\n    if (status === \"Checked In\") {\n      return (\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          type=\"button\"\n          onClick={checkOut}\n          size=\"small\"\n          className={classes.button}\n        >\n          Check Out\n        </Button>\n      );\n    } else if (status === \"Completed\") {\n      return null;\n    } else {\n      return (\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          type=\"button\"\n          onClick={checkIn}\n          size=\"small\"\n          className={classes.button}\n        >\n          Check In\n        </Button>\n      );\n    }\n  }\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n  // const isItemSelected = isSelected(guest.firstName);\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n  const labelId = `enhanced-table-checkbox-${index}`;\n\n  return (\n    <>\n      <TableRow\n        hover\n        onClick={(event) => handleClick(event, reservation.uid)}\n        className={classes.row}\n        role=\"checkbox\"\n        aria-checked={isSelected(reservation.uid)}\n        tabIndex={-1}\n        key={reservation.fistName}\n        selected={isSelected(reservation.uid)}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={isSelected(reservation.uid)}\n            inputProps={{ \"aria-labelledby\": labelId }}\n          />\n        </TableCell>\n        <TableCell>{reservation.uid}</TableCell>\n        <TableCell>{checkInDate}</TableCell>\n        <TableCell>{checkOutDate}</TableCell>\n        <TableCell>{numberOfGuests}</TableCell>\n        <TableCell>{room.roomName}</TableCell>\n        <TableCell>{status}</TableCell>\n        <TableCell className={classes.buttonCell}>\n          {ConditionalButtons()}\n\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => handleClickOpen()}\n            size=\"small\"\n            className={classes.button}\n          >\n            Edit\n          </Button>\n          <Button\n            onClick={openConfirmation}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n            size=\"small\"\n            className={classes.button}\n          >\n            Delete\n          </Button>\n        </TableCell>\n      </TableRow>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        maxWidth=\"xl\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Booking {reservation.uid}\n        </DialogTitle>\n        <DialogContent>\n          <CreateBookingEdit\n            booking={reservation}\n            guests={guests}\n            onToggleEditMode={handleClose}\n            error={error}\n            checkInDate={checkInDate}\n            checkOutDate={checkOutDate}\n            setCheckInDate={setCheckInDate}\n            setCheckOutDate={setCheckOutDate}\n            handleSubmit={handleSubmit}\n            addGuest={addGuest}\n            handleGuest={handleGuest}\n            handleDeleteGuest={handleDeleteGuest}\n            selectedGuests={selectedGuests}\n            setRoom={setRoom}\n            room={room}\n            numberOfGuests={numberOfGuests}\n            setNumberOfGuests={setNumberOfGuests}\n            reservationMode={reservationMode}\n            status={status}\n            setStatus={setStatus}\n          />\n        </DialogContent>\n        <DialogActions>\n          {error && <p>{error.message}</p>}\n          <Button\n            onClick={handleSubmit}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Save\n          </Button>\n          <Button\n            onClick={openConfirmation}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n          >\n            Delete\n          </Button>\n          <Button\n            onClick={handleClose}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"button\"\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openDeleteConfirmation}\n        onClose={closeConfirmation}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to Delete booking:{reservation.uid}?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeConfirmation} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onRemoveReservation} color=\"primary\" autoFocus>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default withFirebase(ReservationListItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst headCells = [\n  { id: \"bookingRef\", disablePadding: true, label: \"Booking Ref\" },\n  {\n    id: \"checkInDate\",\n    disablePadding: false,\n    label: \"Check In Date\",\n  },\n  {\n    id: \"checkOutDate\",\n    disablePadding: false,\n    label: \"Check Out Date\",\n  },\n  { id: \"numberOfGuests\", disablePadding: false, label: \"Number of Guests\" },\n  { id: \"roomName\", disablePadding: false, label: \"Room Name\" },\n  { id: \"bookingStatus\", disablePadding: false, label: \"Booking Status\" },\n];\n\nfunction TableHeads(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all guests\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell></TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\nTableHeads.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default TableHeads;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.contrastText,\n          backgroundColor: lighten(theme.palette.primary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst TableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, deleteAllSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Reservations\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteAllSelected}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default TableToolbar;\n","import React, { useState } from \"react\";\n\nimport ReservationListItem from \"./ReservationListItem\";\nimport TableLoading from \"../Loading/TableLoading\";\nimport TableHeads from \"./TableHeads\";\nimport TableToolbar from \"./TableToolbar\";\nimport { withFirebase } from \"../Firebase\";\n\nimport {\n  TableContainer,\n  Table,\n  Paper,\n  TableBody,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogContentText,\n  TablePagination,\n} from \"@material-ui/core\";\n\nfunction ReservationList(props) {\n  const { classes, error, setError, loading, bookings } = props;\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [openDeleteConfirmation, setOpenDeleteConfirmation] = useState(false);\n  const [orderBy, setOrderBy] = useState(\"checkInDate\");\n  const [order, setOrder] = useState(\"asc\");\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  async function loopDelete() {\n    for (let i = 0; i < selected.length; i++) {\n      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));\n      props.firebase.fetchId(\"bookings\", selected[i]).remove();\n    }\n  }\n\n  function handleDeleteAllSelected() {\n    if (selected.length > 1) {\n      loopDelete();\n      setOpenDeleteConfirmation(false);\n      setSelected([]);\n    } else {\n      props.firebase.fetchId(\"bookings\", selected).remove();\n    }\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = bookings.map((n) => n.uid);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  return (\n    <Paper className={classes.container}>\n      <TableToolbar\n        numSelected={selected.length}\n        deleteAllSelected={() => setOpenDeleteConfirmation(true)}\n      />\n      {error && <p>{error.message}</p>}\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHeads\n            classes={classes}\n            numSelected={selected.length}\n            order={order}\n            orderBy={orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={bookings.length}\n          />\n          <TableBody>\n            {loading && <TableLoading />}\n            {bookings &&\n              stableSort(bookings, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((reservation, index) => (\n                  <ReservationListItem\n                    key={reservation.uid}\n                    index={index}\n                    reservation={reservation}\n                    setError={setError}\n                    selected={selected}\n                    setSelected={setSelected}\n                  />\n                ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50, 100]}\n        component=\"div\"\n        count={bookings.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <Dialog\n        open={openDeleteConfirmation}\n        onClose={() => {\n          setOpenDeleteConfirmation(false);\n        }}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to Delete the selected {selected.length}{\" \"}\n            reservations?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpenDeleteConfirmation(false);\n            }}\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button onClick={handleDeleteAllSelected} color=\"primary\" autoFocus>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default withFirebase(ReservationList);\n","import React, { useState } from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  Typography,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core/\";\n\nfunction ReservationSearch({ classes, bookings, setFilteredBookings }) {\n  const [checkInDate, setCheckInDate] = useState(\"\");\n  const [checkOutDate, setCheckOutDate] = useState(\"\");\n  const [bookingRef, setBookingRef] = useState(\"\");\n  const [numberOfGuests, setNumberOfGuests] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [bookingStatus, setBookingStatus] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let query = [\n      bookingRef,\n      checkInDate,\n      checkOutDate,\n      numberOfGuests,\n      roomName,\n      bookingStatus,\n    ];\n    const filteredBookings = bookings.filter((booking) => {\n      if (\n        query[0] &&\n        !booking.uid.toLowerCase().includes(query[0].toLowerCase())\n      ) {\n        return false;\n      }\n      if (query[1] && !booking.checkInDate.includes(query[1])) {\n        return false;\n      }\n      if (query[2] && !booking.checkOutDate.includes(query[2])) {\n        return false;\n      }\n      if (query[3] && !booking.numberOfGuests.includes(query[3])) {\n        return false;\n      }\n      if (\n        query[4] &&\n        !booking.room.roomName.toLowerCase().includes(query[4].toLowerCase())\n      ) {\n        return false;\n      }\n      if (\n        query[5] &&\n        !booking.status.toLowerCase().includes(query[5].toLowerCase())\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    setFilteredBookings(filteredBookings);\n  };\n\n  const handleSelectorChange = (e) => {\n    setBookingStatus(e.target.value);\n  };\n\n  return (\n    <Paper className={classes.container}>\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Search Reservations\n      </Typography>\n      <form onSubmit={handleSubmit}>\n        <div className={classes.divider}>\n          <TextField\n            name=\"bookingRef\"\n            id=\"filled-basic\"\n            label=\"Booking Reference\"\n            className={classes.textField}\n            variant=\"filled\"\n            type=\"text\"\n            onChange={(e) => setBookingRef(e.target.value)}\n          />\n          <TextField\n            name=\"checkInDate\"\n            id=\"date\"\n            label=\"Check In Date\"\n            className={classes.textField}\n            variant=\"filled\"\n            type=\"date\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => setCheckInDate(e.target.value)}\n          />\n          <TextField\n            name=\"checkOutDate\"\n            id=\"date\"\n            label=\"Check Out Date\"\n            type=\"date\"\n            className={classes.textField}\n            variant=\"filled\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => setCheckOutDate(e.target.value)}\n          />\n        </div>\n        <div className={classes.divider}>\n          <TextField\n            name=\"roomName\"\n            id=\"filled-basic\"\n            label=\"Room Name\"\n            className={classes.textField}\n            variant=\"filled\"\n            type=\"text\"\n            onChange={(e) => setRoomName(e.target.value)}\n          />\n          <TextField\n            name=\"numberOfPeople\"\n            id=\"filled-margin-none\"\n            label=\"Number Of Guests\"\n            className={classes.textField}\n            type=\"number\"\n            variant=\"filled\"\n            onChange={(e) => setNumberOfGuests(e.target.value)}\n          />\n          <FormControl variant=\"filled\" className={classes.formControl}>\n            <InputLabel id=\"simple-select-filled-label\">Status</InputLabel>\n            <Select\n              labelId=\"simple-select-filled-label\"\n              id=\"simple-select\"\n              value={bookingStatus}\n              onChange={handleSelectorChange}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"Started\"}>Started</MenuItem>\n              <MenuItem value={\"Booked\"}>Booked</MenuItem>\n              <MenuItem value={\"Checked In\"}>Checked In</MenuItem>\n              <MenuItem value={\"Complete\"}>Complete</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div className={classes.divider}>\n          <Button\n            className={classes.button}\n            color=\"secondary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    </Paper>\n  );\n}\n\nexport default ReservationSearch;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { withAuthorization } from \"../Session\";\n\nimport ReservationList from \"./ReservationList\";\nimport ReservationSearch from \"./ReservationSearch\";\nimport * as ROLES from \"../../constants/roles\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  container: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    width: \"20vw\",\n  },\n  divider: {\n    marginBottom: theme.spacing(1),\n  },\n  formControl: {\n    marginRight: theme.spacing(1),\n    width: \"20vw\",\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction Reservations() {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { bookings } = useSelector((state) => ({\n    bookings: Object.keys(state.bookingState.bookings || {}).map((key) => ({\n      ...state.bookingState.bookings[key],\n      uid: key,\n    })),\n  }));\n  const [filteredBookings, setFilteredBookings] = useState(\"\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (!filteredBookings.length) {\n      setLoading(true);\n    }\n    if (!filteredBookings.length) {\n      const setBookings = () => {\n        setFilteredBookings(bookings);\n        setLoading(false);\n      };\n      setBookings();\n    }\n  }, [filteredBookings]);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <ReservationSearch\n        classes={classes}\n        bookings={bookings}\n        setFilteredBookings={setFilteredBookings}\n      />\n      <ReservationList\n        classes={classes}\n        bookings={filteredBookings}\n        error={error}\n        setError={setError}\n        loading={loading}\n      />\n    </Container>\n  );\n}\n\nconst condition = (authUser) =>\n  (authUser && !!authUser.roles[ROLES.ADMIN]) ||\n  (authUser && !!authUser.roles[ROLES.STAFF]);\n\nexport default withAuthorization(condition)(Reservations);\n","import Reservations from \"./Reservations\";\n\nexport default Reservations;\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { withFirebase } from \"../Firebase\";\n\nimport Navbar from \"../Navigation\";\nimport Landing from \"../Landing\";\nimport SignUp from \"../SignUp\";\nimport SignIn from \"../SignIn\";\nimport PasswordForget from \"../PasswordForget\";\nimport Home from \"../Home\";\nimport Register from \"../Register\";\nimport Bookings from \"../Booking\";\nimport Activities from \"../Activities\";\nimport Staff from \"../Staff\";\nimport Account from \"../Account\";\nimport Admin from \"../Admin\";\nimport Room from \"../Rooms\";\nimport Guests from \"../Guests\";\nimport Reservations from \"../Reservation\";\nimport { CreateBooking } from \"../Booking\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../Session\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: \"100%\",\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    onListenForState();\n    return () => {\n      props.firebase.fetch(\"bookings\").off();\n      props.firebase.fetch(\"rooms\").off();\n      props.firebase.fetch(\"guests\").off();\n    };\n  }, []);\n\n  function onListenForState() {\n    props.firebase.fetch(\"bookings\").on(\"value\", (snapshot) => {\n      onSetBookings(snapshot.val());\n    });\n    props.firebase.fetch(\"rooms\").on(\"value\", (snapshot) => {\n      onSetRooms(snapshot.val());\n    });\n    props.firebase.fetch(\"guests\").on(\"value\", (snapshot) => {\n      onSetGuests(snapshot.val());\n    });\n  }\n\n  function onSetBookings(bookings) {\n    dispatch({ type: \"BOOKINGS_SET\", bookings });\n  }\n  function onSetRooms(rooms) {\n    dispatch({ type: \"ROOMS_SET\", rooms });\n  }\n  function onSetGuests(guests) {\n    dispatch({ type: \"GUESTS_SET\", guests });\n  }\n\n  return (\n    <Container className={classes.root} maxWidth=\"xl\">\n      <Router>\n        <Navbar />\n\n        <Route exact path={ROUTES.LANDING} component={Landing} />\n        <Route path={ROUTES.SIGN_UP} component={SignUp} />\n        <Route path={ROUTES.SIGN_IN} component={SignIn} />\n        <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForget} />\n        <Route path={ROUTES.HOME} component={Home} />\n        <Route path={ROUTES.REGISTER} component={Register} />\n        <Route exact path={ROUTES.BOOKINGS} component={Bookings} />\n        <Route exact path={ROUTES.CREATE_BOOKING} component={CreateBooking} />\n        <Route path={ROUTES.RESERVATIONS} component={Reservations} />\n        <Route path={ROUTES.ACTIVITIES} component={Activities} />\n        <Route path={ROUTES.STAFF} component={Staff} />\n        <Route path={ROUTES.ROOM} component={Room} />\n        <Route path={ROUTES.ACCOUNT} component={Account} />\n        <Route path={ROUTES.ADMIN} component={Admin} />\n        <Route path={ROUTES.GUESTS} component={Guests} />\n      </Router>\n    </Container>\n  );\n}\n\nexport default compose(withFirebase, withAuthentication)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport theme from \"./theme\";\nimport store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}